ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_initVar
  18              		.bss
  19              		.type	PWM_initVar, %object
  20              		.size	PWM_initVar, 1
  21              	PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Init, %function
  29              	PWM_Init:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 2


  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 3


  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 0F4B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0D4B     		ldr	r3, .L2
  47 000e 0D4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_WriteCounter
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0A4B     		ldr	r3, .L2
  55 001c 094A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 4


 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 094B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 074B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 B020     		mov	r0, #176
  71 0036 FFF7FEFF 		bl	PWM_WritePeriod
 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  72              		.loc 1 147 0
  73 003a 1420     		mov	r0, #20
  74 003c FFF7FEFF 		bl	PWM_WriteCompare
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 5


 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
  75              		.loc 1 160 0
  76 0040 BD46     		mov	sp, r7
  77              		@ sp needed
  78 0042 80BD     		pop	{r7, pc}
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0044 00012040 		.word	1075839232
  83 0048 24012040 		.word	1075839268
  84 004c 28012040 		.word	1075839272
  85              		.cfi_endproc
  86              	.LFE2:
  87              		.size	PWM_Init, .-PWM_Init
  88              		.section	.text.PWM_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	PWM_Enable
  91              		.code	16
  92              		.thumb_func
  93              		.type	PWM_Enable, %function
  94              	PWM_Enable:
  95              	.LFB3:
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
  96              		.loc 1 178 0
  97              		.cfi_startproc
  98 0000 90B5     		push	{r4, r7, lr}
  99              		.cfi_def_cfa_offset 12
 100              		.cfi_offset 4, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 83B0     		sub	sp, sp, #12
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 6


 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 107              		.loc 1 181 0
 108 0006 FC1D     		add	r4, r7, #7
 109 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 110 000c 031C     		mov	r3, r0
 111 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 112              		.loc 1 182 0
 113 0010 084B     		ldr	r3, .L5
 114 0012 084A     		ldr	r2, .L5
 115 0014 1268     		ldr	r2, [r2]
 116 0016 0121     		mov	r1, #1
 117 0018 0A43     		orr	r2, r1
 118 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 119              		.loc 1 183 0
 120 001c FB1D     		add	r3, r7, #7
 121 001e 1B78     		ldrb	r3, [r3]
 122 0020 181C     		mov	r0, r3
 123 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 124              		.loc 1 188 0
 125 0026 0120     		mov	r0, #1
 126 0028 1821     		mov	r1, #24
 127 002a FFF7FEFF 		bl	PWM_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c **** }
 128              		.loc 1 197 0
 129 002e BD46     		mov	sp, r7
 130 0030 03B0     		add	sp, sp, #12
 131              		@ sp needed
 132 0032 90BD     		pop	{r4, r7, pc}
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 0034 00002040 		.word	1075838976
 137              		.cfi_endproc
 138              	.LFE3:
 139              		.size	PWM_Enable, .-PWM_Enable
 140              		.section	.text.PWM_Start,"ax",%progbits
 141              		.align	2
 142              		.global	PWM_Start
 143              		.code	16
 144              		.thumb_func
 145              		.type	PWM_Start, %function
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 7


 146              	PWM_Start:
 147              	.LFB4:
 198:.\Generated_Source\PSoC4/PWM.c **** 
 199:.\Generated_Source\PSoC4/PWM.c **** 
 200:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 202:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM.c **** *
 204:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 206:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 207:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM.c **** *  None
 212:.\Generated_Source\PSoC4/PWM.c **** *
 213:.\Generated_Source\PSoC4/PWM.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM.c **** *  None
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 222:.\Generated_Source\PSoC4/PWM.c **** *
 223:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 225:.\Generated_Source\PSoC4/PWM.c **** {
 148              		.loc 1 225 0
 149              		.cfi_startproc
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 156              		.loc 1 226 0
 157 0004 064B     		ldr	r3, .L9
 158 0006 1B78     		ldrb	r3, [r3]
 159 0008 002B     		cmp	r3, #0
 160 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/PWM.c ****     {
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 161              		.loc 1 228 0
 162 000c FFF7FEFF 		bl	PWM_Init
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 163              		.loc 1 229 0
 164 0010 034B     		ldr	r3, .L9
 165 0012 0122     		mov	r2, #1
 166 0014 1A70     		strb	r2, [r3]
 167              	.L8:
 230:.\Generated_Source\PSoC4/PWM.c ****     }
 231:.\Generated_Source\PSoC4/PWM.c **** 
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 8


 168              		.loc 1 232 0
 169 0016 FFF7FEFF 		bl	PWM_Enable
 233:.\Generated_Source\PSoC4/PWM.c **** }
 170              		.loc 1 233 0
 171 001a BD46     		mov	sp, r7
 172              		@ sp needed
 173 001c 80BD     		pop	{r7, pc}
 174              	.L10:
 175 001e C046     		.align	2
 176              	.L9:
 177 0020 00000000 		.word	PWM_initVar
 178              		.cfi_endproc
 179              	.LFE4:
 180              		.size	PWM_Start, .-PWM_Start
 181              		.section	.text.PWM_Stop,"ax",%progbits
 182              		.align	2
 183              		.global	PWM_Stop
 184              		.code	16
 185              		.thumb_func
 186              		.type	PWM_Stop, %function
 187              	PWM_Stop:
 188              	.LFB5:
 234:.\Generated_Source\PSoC4/PWM.c **** 
 235:.\Generated_Source\PSoC4/PWM.c **** 
 236:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 238:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 242:.\Generated_Source\PSoC4/PWM.c **** *
 243:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM.c **** *  None
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM.c **** *  None
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 251:.\Generated_Source\PSoC4/PWM.c **** {
 189              		.loc 1 251 0
 190              		.cfi_startproc
 191 0000 90B5     		push	{r4, r7, lr}
 192              		.cfi_def_cfa_offset 12
 193              		.cfi_offset 4, -12
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 83B0     		sub	sp, sp, #12
 197              		.cfi_def_cfa_offset 24
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM.c **** 
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 200              		.loc 1 254 0
 201 0006 FC1D     		add	r4, r7, #7
 202 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 9


 203 000c 031C     		mov	r3, r0
 204 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/PWM.c **** 
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 205              		.loc 1 256 0
 206 0010 064B     		ldr	r3, .L12
 207 0012 064A     		ldr	r2, .L12
 208 0014 1268     		ldr	r2, [r2]
 209 0016 0121     		mov	r1, #1
 210 0018 8A43     		bic	r2, r1
 211 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 212              		.loc 1 258 0
 213 001c FB1D     		add	r3, r7, #7
 214 001e 1B78     		ldrb	r3, [r3]
 215 0020 181C     		mov	r0, r3
 216 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/PWM.c **** }
 217              		.loc 1 259 0
 218 0026 BD46     		mov	sp, r7
 219 0028 03B0     		add	sp, sp, #12
 220              		@ sp needed
 221 002a 90BD     		pop	{r4, r7, pc}
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 002c 00002040 		.word	1075838976
 226              		.cfi_endproc
 227              	.LFE5:
 228              		.size	PWM_Stop, .-PWM_Stop
 229              		.section	.text.PWM_SetMode,"ax",%progbits
 230              		.align	2
 231              		.global	PWM_SetMode
 232              		.code	16
 233              		.thumb_func
 234              		.type	PWM_SetMode, %function
 235              	PWM_SetMode:
 236              	.LFB6:
 260:.\Generated_Source\PSoC4/PWM.c **** 
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 264:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 268:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM.c **** *
 271:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 10


 278:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM.c **** *  None
 285:.\Generated_Source\PSoC4/PWM.c **** *
 286:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM.c **** {
 237              		.loc 1 288 0
 238              		.cfi_startproc
 239 0000 90B5     		push	{r4, r7, lr}
 240              		.cfi_def_cfa_offset 12
 241              		.cfi_offset 4, -12
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              		.cfi_def_cfa_offset 32
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM.c **** 
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 249              		.loc 1 291 0
 250 0008 3C1C     		mov	r4, r7
 251 000a 0F34     		add	r4, r4, #15
 252 000c FFF7FEFF 		bl	CyEnterCriticalSection
 253 0010 031C     		mov	r3, r0
 254 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/PWM.c **** 
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 255              		.loc 1 293 0
 256 0014 0A4B     		ldr	r3, .L15
 257 0016 0A4A     		ldr	r2, .L15
 258 0018 1168     		ldr	r1, [r2]
 259 001a 0A4A     		ldr	r2, .L15+4
 260 001c 0A40     		and	r2, r1
 261 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 262              		.loc 1 294 0
 263 0020 074B     		ldr	r3, .L15
 264 0022 074A     		ldr	r2, .L15
 265 0024 1168     		ldr	r1, [r2]
 266 0026 7A68     		ldr	r2, [r7, #4]
 267 0028 0A43     		orr	r2, r1
 268 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/PWM.c **** 
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 269              		.loc 1 296 0
 270 002c 3B1C     		mov	r3, r7
 271 002e 0F33     		add	r3, r3, #15
 272 0030 1B78     		ldrb	r3, [r3]
 273 0032 181C     		mov	r0, r3
 274 0034 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 11


 297:.\Generated_Source\PSoC4/PWM.c **** }
 275              		.loc 1 297 0
 276 0038 BD46     		mov	sp, r7
 277 003a 05B0     		add	sp, sp, #20
 278              		@ sp needed
 279 003c 90BD     		pop	{r4, r7, pc}
 280              	.L16:
 281 003e C046     		.align	2
 282              	.L15:
 283 0040 00012040 		.word	1075839232
 284 0044 FFFFFFF8 		.word	-117440513
 285              		.cfi_endproc
 286              	.LFE6:
 287              		.size	PWM_SetMode, .-PWM_SetMode
 288              		.section	.text.PWM_SetQDMode,"ax",%progbits
 289              		.align	2
 290              		.global	PWM_SetQDMode
 291              		.code	16
 292              		.thumb_func
 293              		.type	PWM_SetQDMode, %function
 294              	PWM_SetQDMode:
 295              	.LFB7:
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 302:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM.c **** *
 304:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM.c **** *
 308:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM.c **** *
 316:.\Generated_Source\PSoC4/PWM.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM.c **** *  None
 318:.\Generated_Source\PSoC4/PWM.c **** *
 319:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM.c **** {
 296              		.loc 1 321 0
 297              		.cfi_startproc
 298 0000 90B5     		push	{r4, r7, lr}
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 85B0     		sub	sp, sp, #20
 304              		.cfi_def_cfa_offset 32
 305 0004 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 12


 307 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM.c **** 
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 308              		.loc 1 324 0
 309 0008 3C1C     		mov	r4, r7
 310 000a 0F34     		add	r4, r4, #15
 311 000c FFF7FEFF 		bl	CyEnterCriticalSection
 312 0010 031C     		mov	r3, r0
 313 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/PWM.c **** 
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 314              		.loc 1 326 0
 315 0014 0A4B     		ldr	r3, .L18
 316 0016 0A4A     		ldr	r2, .L18
 317 0018 1168     		ldr	r1, [r2]
 318 001a 0A4A     		ldr	r2, .L18+4
 319 001c 0A40     		and	r2, r1
 320 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 321              		.loc 1 327 0
 322 0020 074B     		ldr	r3, .L18
 323 0022 074A     		ldr	r2, .L18
 324 0024 1168     		ldr	r1, [r2]
 325 0026 7A68     		ldr	r2, [r7, #4]
 326 0028 0A43     		orr	r2, r1
 327 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/PWM.c **** 
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 328              		.loc 1 329 0
 329 002c 3B1C     		mov	r3, r7
 330 002e 0F33     		add	r3, r3, #15
 331 0030 1B78     		ldrb	r3, [r3]
 332 0032 181C     		mov	r0, r3
 333 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/PWM.c **** }
 334              		.loc 1 330 0
 335 0038 BD46     		mov	sp, r7
 336 003a 05B0     		add	sp, sp, #20
 337              		@ sp needed
 338 003c 90BD     		pop	{r4, r7, pc}
 339              	.L19:
 340 003e C046     		.align	2
 341              	.L18:
 342 0040 00012040 		.word	1075839232
 343 0044 FFFF8FFF 		.word	-7340033
 344              		.cfi_endproc
 345              	.LFE7:
 346              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 347              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_SetPrescaler
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_SetPrescaler, %function
 353              	PWM_SetPrescaler:
 354              	.LFB8:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 13


 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c **** 
 333:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM.c **** *
 337:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM.c **** *
 341:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM.c **** *
 353:.\Generated_Source\PSoC4/PWM.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM.c **** *  None
 355:.\Generated_Source\PSoC4/PWM.c **** *
 356:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM.c **** {
 355              		.loc 1 358 0
 356              		.cfi_startproc
 357 0000 90B5     		push	{r4, r7, lr}
 358              		.cfi_def_cfa_offset 12
 359              		.cfi_offset 4, -12
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 85B0     		sub	sp, sp, #20
 363              		.cfi_def_cfa_offset 32
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM.c **** 
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 367              		.loc 1 361 0
 368 0008 3C1C     		mov	r4, r7
 369 000a 0F34     		add	r4, r4, #15
 370 000c FFF7FEFF 		bl	CyEnterCriticalSection
 371 0010 031C     		mov	r3, r0
 372 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 373              		.loc 1 363 0
 374 0014 0A4B     		ldr	r3, .L21
 375 0016 0A4A     		ldr	r2, .L21
 376 0018 1168     		ldr	r1, [r2]
 377 001a 0A4A     		ldr	r2, .L21+4
 378 001c 0A40     		and	r2, r1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 14


 379 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 380              		.loc 1 364 0
 381 0020 074B     		ldr	r3, .L21
 382 0022 074A     		ldr	r2, .L21
 383 0024 1168     		ldr	r1, [r2]
 384 0026 7A68     		ldr	r2, [r7, #4]
 385 0028 0A43     		orr	r2, r1
 386 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/PWM.c **** 
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 387              		.loc 1 366 0
 388 002c 3B1C     		mov	r3, r7
 389 002e 0F33     		add	r3, r3, #15
 390 0030 1B78     		ldrb	r3, [r3]
 391 0032 181C     		mov	r0, r3
 392 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/PWM.c **** }
 393              		.loc 1 367 0
 394 0038 BD46     		mov	sp, r7
 395 003a 05B0     		add	sp, sp, #20
 396              		@ sp needed
 397 003c 90BD     		pop	{r4, r7, pc}
 398              	.L22:
 399 003e C046     		.align	2
 400              	.L21:
 401 0040 00012040 		.word	1075839232
 402 0044 FF00FFFF 		.word	-65281
 403              		.cfi_endproc
 404              	.LFE8:
 405              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 406              		.section	.text.PWM_SetOneShot,"ax",%progbits
 407              		.align	2
 408              		.global	PWM_SetOneShot
 409              		.code	16
 410              		.thumb_func
 411              		.type	PWM_SetOneShot, %function
 412              	PWM_SetOneShot:
 413              	.LFB9:
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 372:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM.c **** *
 374:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 376:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 15


 386:.\Generated_Source\PSoC4/PWM.c **** *  None
 387:.\Generated_Source\PSoC4/PWM.c **** *
 388:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM.c **** {
 414              		.loc 1 390 0
 415              		.cfi_startproc
 416 0000 90B5     		push	{r4, r7, lr}
 417              		.cfi_def_cfa_offset 12
 418              		.cfi_offset 4, -12
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 85B0     		sub	sp, sp, #20
 422              		.cfi_def_cfa_offset 32
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 426              		.loc 1 393 0
 427 0008 3C1C     		mov	r4, r7
 428 000a 0F34     		add	r4, r4, #15
 429 000c FFF7FEFF 		bl	CyEnterCriticalSection
 430 0010 031C     		mov	r3, r0
 431 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/PWM.c **** 
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 432              		.loc 1 395 0
 433 0014 0B4B     		ldr	r3, .L24
 434 0016 0B4A     		ldr	r2, .L24
 435 0018 1168     		ldr	r1, [r2]
 436 001a 0B4A     		ldr	r2, .L24+4
 437 001c 0A40     		and	r2, r1
 438 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 439              		.loc 1 396 0
 440 0020 084B     		ldr	r3, .L24
 441 0022 084A     		ldr	r2, .L24
 442 0024 1168     		ldr	r1, [r2]
 443 0026 7868     		ldr	r0, [r7, #4]
 444 0028 0122     		mov	r2, #1
 445 002a 0240     		and	r2, r0
 446 002c 9204     		lsl	r2, r2, #18
 447 002e 0A43     		orr	r2, r1
 448 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 449              		.loc 1 399 0
 450 0032 3B1C     		mov	r3, r7
 451 0034 0F33     		add	r3, r3, #15
 452 0036 1B78     		ldrb	r3, [r3]
 453 0038 181C     		mov	r0, r3
 454 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/PWM.c **** }
 455              		.loc 1 400 0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 16


 456 003e BD46     		mov	sp, r7
 457 0040 05B0     		add	sp, sp, #20
 458              		@ sp needed
 459 0042 90BD     		pop	{r4, r7, pc}
 460              	.L25:
 461              		.align	2
 462              	.L24:
 463 0044 00012040 		.word	1075839232
 464 0048 FFFFFBFF 		.word	-262145
 465              		.cfi_endproc
 466              	.LFE9:
 467              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 468              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 469              		.align	2
 470              		.global	PWM_SetPWMMode
 471              		.code	16
 472              		.thumb_func
 473              		.type	PWM_SetPWMMode, %function
 474              	PWM_SetPWMMode:
 475              	.LFB10:
 401:.\Generated_Source\PSoC4/PWM.c **** 
 402:.\Generated_Source\PSoC4/PWM.c **** 
 403:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM.c **** *
 407:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM.c **** *
 414:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 17


 438:.\Generated_Source\PSoC4/PWM.c **** *
 439:.\Generated_Source\PSoC4/PWM.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM.c **** *  None
 441:.\Generated_Source\PSoC4/PWM.c **** *
 442:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM.c **** {
 476              		.loc 1 444 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 82B0     		sub	sp, sp, #8
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 486 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 487              		.loc 1 445 0
 488 0008 034B     		ldr	r3, .L27
 489 000a 7968     		ldr	r1, [r7, #4]
 490 000c 3F22     		mov	r2, #63
 491 000e 0A40     		and	r2, r1
 492 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/PWM.c **** }
 493              		.loc 1 446 0
 494 0012 BD46     		mov	sp, r7
 495 0014 02B0     		add	sp, sp, #8
 496              		@ sp needed
 497 0016 80BD     		pop	{r7, pc}
 498              	.L28:
 499              		.align	2
 500              	.L27:
 501 0018 28012040 		.word	1075839272
 502              		.cfi_endproc
 503              	.LFE10:
 504              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 505              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 506              		.align	2
 507              		.global	PWM_SetPWMSyncKill
 508              		.code	16
 509              		.thumb_func
 510              		.type	PWM_SetPWMSyncKill, %function
 511              	PWM_SetPWMSyncKill:
 512              	.LFB11:
 447:.\Generated_Source\PSoC4/PWM.c **** 
 448:.\Generated_Source\PSoC4/PWM.c **** 
 449:.\Generated_Source\PSoC4/PWM.c **** 
 450:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM.c **** *
 454:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 18


 458:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM.c **** *
 463:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM.c **** 
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM.c **** *
 475:.\Generated_Source\PSoC4/PWM.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM.c **** *  None
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM.c **** {
 513              		.loc 1 480 0
 514              		.cfi_startproc
 515 0000 90B5     		push	{r4, r7, lr}
 516              		.cfi_def_cfa_offset 12
 517              		.cfi_offset 4, -12
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 85B0     		sub	sp, sp, #20
 521              		.cfi_def_cfa_offset 32
 522 0004 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 524 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM.c **** 
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 525              		.loc 1 483 0
 526 0008 3C1C     		mov	r4, r7
 527 000a 0F34     		add	r4, r4, #15
 528 000c FFF7FEFF 		bl	CyEnterCriticalSection
 529 0010 031C     		mov	r3, r0
 530 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 531              		.loc 1 485 0
 532 0014 0B4B     		ldr	r3, .L30
 533 0016 0B4A     		ldr	r2, .L30
 534 0018 1268     		ldr	r2, [r2]
 535 001a 0421     		mov	r1, #4
 536 001c 8A43     		bic	r2, r1
 537 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 538              		.loc 1 486 0
 539 0020 084B     		ldr	r3, .L30
 540 0022 084A     		ldr	r2, .L30
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 19


 541 0024 1168     		ldr	r1, [r2]
 542 0026 7868     		ldr	r0, [r7, #4]
 543 0028 0122     		mov	r2, #1
 544 002a 0240     		and	r2, r0
 545 002c 9200     		lsl	r2, r2, #2
 546 002e 0A43     		orr	r2, r1
 547 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 548              		.loc 1 489 0
 549 0032 3B1C     		mov	r3, r7
 550 0034 0F33     		add	r3, r3, #15
 551 0036 1B78     		ldrb	r3, [r3]
 552 0038 181C     		mov	r0, r3
 553 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/PWM.c **** }
 554              		.loc 1 490 0
 555 003e BD46     		mov	sp, r7
 556 0040 05B0     		add	sp, sp, #20
 557              		@ sp needed
 558 0042 90BD     		pop	{r4, r7, pc}
 559              	.L31:
 560              		.align	2
 561              	.L30:
 562 0044 00012040 		.word	1075839232
 563              		.cfi_endproc
 564              	.LFE11:
 565              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 566              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 567              		.align	2
 568              		.global	PWM_SetPWMStopOnKill
 569              		.code	16
 570              		.thumb_func
 571              		.type	PWM_SetPWMStopOnKill, %function
 572              	PWM_SetPWMStopOnKill:
 573              	.LFB12:
 491:.\Generated_Source\PSoC4/PWM.c **** 
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM.c **** *
 497:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM.c **** *
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 20


 511:.\Generated_Source\PSoC4/PWM.c **** *
 512:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM.c **** {
 574              		.loc 1 514 0
 575              		.cfi_startproc
 576 0000 90B5     		push	{r4, r7, lr}
 577              		.cfi_def_cfa_offset 12
 578              		.cfi_offset 4, -12
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 85B0     		sub	sp, sp, #20
 582              		.cfi_def_cfa_offset 32
 583 0004 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 585 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM.c **** 
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 586              		.loc 1 517 0
 587 0008 3C1C     		mov	r4, r7
 588 000a 0F34     		add	r4, r4, #15
 589 000c FFF7FEFF 		bl	CyEnterCriticalSection
 590 0010 031C     		mov	r3, r0
 591 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/PWM.c **** 
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 592              		.loc 1 519 0
 593 0014 0B4B     		ldr	r3, .L33
 594 0016 0B4A     		ldr	r2, .L33
 595 0018 1268     		ldr	r2, [r2]
 596 001a 0821     		mov	r1, #8
 597 001c 8A43     		bic	r2, r1
 598 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 599              		.loc 1 520 0
 600 0020 084B     		ldr	r3, .L33
 601 0022 084A     		ldr	r2, .L33
 602 0024 1168     		ldr	r1, [r2]
 603 0026 7868     		ldr	r0, [r7, #4]
 604 0028 0122     		mov	r2, #1
 605 002a 0240     		and	r2, r0
 606 002c D200     		lsl	r2, r2, #3
 607 002e 0A43     		orr	r2, r1
 608 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 609              		.loc 1 523 0
 610 0032 3B1C     		mov	r3, r7
 611 0034 0F33     		add	r3, r3, #15
 612 0036 1B78     		ldrb	r3, [r3]
 613 0038 181C     		mov	r0, r3
 614 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/PWM.c **** }
 615              		.loc 1 524 0
 616 003e BD46     		mov	sp, r7
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 21


 617 0040 05B0     		add	sp, sp, #20
 618              		@ sp needed
 619 0042 90BD     		pop	{r4, r7, pc}
 620              	.L34:
 621              		.align	2
 622              	.L33:
 623 0044 00012040 		.word	1075839232
 624              		.cfi_endproc
 625              	.LFE12:
 626              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 627              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 628              		.align	2
 629              		.global	PWM_SetPWMDeadTime
 630              		.code	16
 631              		.thumb_func
 632              		.type	PWM_SetPWMDeadTime, %function
 633              	PWM_SetPWMDeadTime:
 634              	.LFB13:
 525:.\Generated_Source\PSoC4/PWM.c **** 
 526:.\Generated_Source\PSoC4/PWM.c **** 
 527:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM.c **** *
 531:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** *
 538:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM.c **** *
 542:.\Generated_Source\PSoC4/PWM.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM.c **** *  None
 544:.\Generated_Source\PSoC4/PWM.c **** *
 545:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM.c **** {
 635              		.loc 1 547 0
 636              		.cfi_startproc
 637 0000 90B5     		push	{r4, r7, lr}
 638              		.cfi_def_cfa_offset 12
 639              		.cfi_offset 4, -12
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 85B0     		sub	sp, sp, #20
 643              		.cfi_def_cfa_offset 32
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 647              		.loc 1 550 0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 22


 648 0008 3C1C     		mov	r4, r7
 649 000a 0F34     		add	r4, r4, #15
 650 000c FFF7FEFF 		bl	CyEnterCriticalSection
 651 0010 031C     		mov	r3, r0
 652 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/PWM.c **** 
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 653              		.loc 1 552 0
 654 0014 0B4B     		ldr	r3, .L36
 655 0016 0B4A     		ldr	r2, .L36
 656 0018 1168     		ldr	r1, [r2]
 657 001a 0B4A     		ldr	r2, .L36+4
 658 001c 0A40     		and	r2, r1
 659 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 660              		.loc 1 553 0
 661 0020 084B     		ldr	r3, .L36
 662 0022 084A     		ldr	r2, .L36
 663 0024 1168     		ldr	r1, [r2]
 664 0026 7A68     		ldr	r2, [r7, #4]
 665 0028 1202     		lsl	r2, r2, #8
 666 002a 1204     		lsl	r2, r2, #16
 667 002c 120C     		lsr	r2, r2, #16
 668 002e 0A43     		orr	r2, r1
 669 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 670              		.loc 1 556 0
 671 0032 3B1C     		mov	r3, r7
 672 0034 0F33     		add	r3, r3, #15
 673 0036 1B78     		ldrb	r3, [r3]
 674 0038 181C     		mov	r0, r3
 675 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/PWM.c **** }
 676              		.loc 1 557 0
 677 003e BD46     		mov	sp, r7
 678 0040 05B0     		add	sp, sp, #20
 679              		@ sp needed
 680 0042 90BD     		pop	{r4, r7, pc}
 681              	.L37:
 682              		.align	2
 683              	.L36:
 684 0044 00012040 		.word	1075839232
 685 0048 FF00FFFF 		.word	-65281
 686              		.cfi_endproc
 687              	.LFE13:
 688              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 689              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 690              		.align	2
 691              		.global	PWM_SetPWMInvert
 692              		.code	16
 693              		.thumb_func
 694              		.type	PWM_SetPWMInvert, %function
 695              	PWM_SetPWMInvert:
 696              	.LFB14:
 558:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 23


 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM.c **** *
 564:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM.c **** *
 569:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM.c **** *  None
 577:.\Generated_Source\PSoC4/PWM.c **** *
 578:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM.c **** {
 697              		.loc 1 580 0
 698              		.cfi_startproc
 699 0000 90B5     		push	{r4, r7, lr}
 700              		.cfi_def_cfa_offset 12
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 85B0     		sub	sp, sp, #20
 705              		.cfi_def_cfa_offset 32
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 709              		.loc 1 583 0
 710 0008 3C1C     		mov	r4, r7
 711 000a 0F34     		add	r4, r4, #15
 712 000c FFF7FEFF 		bl	CyEnterCriticalSection
 713 0010 031C     		mov	r3, r0
 714 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/PWM.c **** 
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 715              		.loc 1 585 0
 716 0014 0A4B     		ldr	r3, .L39
 717 0016 0A4A     		ldr	r2, .L39
 718 0018 1168     		ldr	r1, [r2]
 719 001a 0A4A     		ldr	r2, .L39+4
 720 001c 0A40     		and	r2, r1
 721 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 722              		.loc 1 586 0
 723 0020 074B     		ldr	r3, .L39
 724 0022 074A     		ldr	r2, .L39
 725 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 24


 726 0026 7A68     		ldr	r2, [r7, #4]
 727 0028 0A43     		orr	r2, r1
 728 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM.c **** 
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 729              		.loc 1 588 0
 730 002c 3B1C     		mov	r3, r7
 731 002e 0F33     		add	r3, r3, #15
 732 0030 1B78     		ldrb	r3, [r3]
 733 0032 181C     		mov	r0, r3
 734 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/PWM.c **** }
 735              		.loc 1 589 0
 736 0038 BD46     		mov	sp, r7
 737 003a 05B0     		add	sp, sp, #20
 738              		@ sp needed
 739 003c 90BD     		pop	{r4, r7, pc}
 740              	.L40:
 741 003e C046     		.align	2
 742              	.L39:
 743 0040 00012040 		.word	1075839232
 744 0044 FFFFCFFF 		.word	-3145729
 745              		.cfi_endproc
 746              	.LFE14:
 747              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 748              		.section	.text.PWM_WriteCounter,"ax",%progbits
 749              		.align	2
 750              		.global	PWM_WriteCounter
 751              		.code	16
 752              		.thumb_func
 753              		.type	PWM_WriteCounter, %function
 754              	PWM_WriteCounter:
 755              	.LFB15:
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c **** 
 592:.\Generated_Source\PSoC4/PWM.c **** 
 593:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 595:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM.c **** *
 597:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM.c **** *
 602:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM.c **** *
 605:.\Generated_Source\PSoC4/PWM.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM.c **** *  None
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM.c **** {
 756              		.loc 1 610 0
 757              		.cfi_startproc
 758 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 25


 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 82B0     		sub	sp, sp, #8
 763              		.cfi_def_cfa_offset 16
 764 0004 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 767              		.loc 1 611 0
 768 0008 034B     		ldr	r3, .L42
 769 000a 7A68     		ldr	r2, [r7, #4]
 770 000c 1204     		lsl	r2, r2, #16
 771 000e 120C     		lsr	r2, r2, #16
 772 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** }
 773              		.loc 1 612 0
 774 0012 BD46     		mov	sp, r7
 775 0014 02B0     		add	sp, sp, #8
 776              		@ sp needed
 777 0016 80BD     		pop	{r7, pc}
 778              	.L43:
 779              		.align	2
 780              	.L42:
 781 0018 08012040 		.word	1075839240
 782              		.cfi_endproc
 783              	.LFE15:
 784              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 785              		.section	.text.PWM_ReadCounter,"ax",%progbits
 786              		.align	2
 787              		.global	PWM_ReadCounter
 788              		.code	16
 789              		.thumb_func
 790              		.type	PWM_ReadCounter, %function
 791              	PWM_ReadCounter:
 792              	.LFB16:
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 617:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM.c **** {
 793              		.loc 1 630 0
 794              		.cfi_startproc
 795 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 26


 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 801              		.loc 1 631 0
 802 0004 034B     		ldr	r3, .L46
 803 0006 1B68     		ldr	r3, [r3]
 804 0008 1B04     		lsl	r3, r3, #16
 805 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/PWM.c **** }
 806              		.loc 1 632 0
 807 000c 181C     		mov	r0, r3
 808 000e BD46     		mov	sp, r7
 809              		@ sp needed
 810 0010 80BD     		pop	{r7, pc}
 811              	.L47:
 812 0012 C046     		.align	2
 813              	.L46:
 814 0014 08012040 		.word	1075839240
 815              		.cfi_endproc
 816              	.LFE16:
 817              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 818              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 819              		.align	2
 820              		.global	PWM_SetCounterMode
 821              		.code	16
 822              		.thumb_func
 823              		.type	PWM_SetCounterMode, %function
 824              	PWM_SetCounterMode:
 825              	.LFB17:
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c **** 
 635:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM.c **** *
 643:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM.c **** *
 654:.\Generated_Source\PSoC4/PWM.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM.c **** *  None
 656:.\Generated_Source\PSoC4/PWM.c **** *
 657:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 27


 658:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM.c **** {
 826              		.loc 1 659 0
 827              		.cfi_startproc
 828 0000 90B5     		push	{r4, r7, lr}
 829              		.cfi_def_cfa_offset 12
 830              		.cfi_offset 4, -12
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 85B0     		sub	sp, sp, #20
 834              		.cfi_def_cfa_offset 32
 835 0004 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 837 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM.c **** 
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 838              		.loc 1 662 0
 839 0008 3C1C     		mov	r4, r7
 840 000a 0F34     		add	r4, r4, #15
 841 000c FFF7FEFF 		bl	CyEnterCriticalSection
 842 0010 031C     		mov	r3, r0
 843 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/PWM.c **** 
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 844              		.loc 1 664 0
 845 0014 0A4B     		ldr	r3, .L49
 846 0016 0A4A     		ldr	r2, .L49
 847 0018 1168     		ldr	r1, [r2]
 848 001a 0A4A     		ldr	r2, .L49+4
 849 001c 0A40     		and	r2, r1
 850 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 851              		.loc 1 665 0
 852 0020 074B     		ldr	r3, .L49
 853 0022 074A     		ldr	r2, .L49
 854 0024 1168     		ldr	r1, [r2]
 855 0026 7A68     		ldr	r2, [r7, #4]
 856 0028 0A43     		orr	r2, r1
 857 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/PWM.c **** 
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 858              		.loc 1 667 0
 859 002c 3B1C     		mov	r3, r7
 860 002e 0F33     		add	r3, r3, #15
 861 0030 1B78     		ldrb	r3, [r3]
 862 0032 181C     		mov	r0, r3
 863 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/PWM.c **** }
 864              		.loc 1 668 0
 865 0038 BD46     		mov	sp, r7
 866 003a 05B0     		add	sp, sp, #20
 867              		@ sp needed
 868 003c 90BD     		pop	{r4, r7, pc}
 869              	.L50:
 870 003e C046     		.align	2
 871              	.L49:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 28


 872 0040 00012040 		.word	1075839232
 873 0044 FFFFFCFF 		.word	-196609
 874              		.cfi_endproc
 875              	.LFE17:
 876              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 877              		.section	.text.PWM_WritePeriod,"ax",%progbits
 878              		.align	2
 879              		.global	PWM_WritePeriod
 880              		.code	16
 881              		.thumb_func
 882              		.type	PWM_WritePeriod, %function
 883              	PWM_WritePeriod:
 884              	.LFB18:
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c **** 
 671:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 673:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM.c **** *
 675:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM.c **** *
 683:.\Generated_Source\PSoC4/PWM.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM.c **** *  None
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM.c **** {
 885              		.loc 1 688 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 896              		.loc 1 689 0
 897 0008 034B     		ldr	r3, .L52
 898 000a 7A68     		ldr	r2, [r7, #4]
 899 000c 1204     		lsl	r2, r2, #16
 900 000e 120C     		lsr	r2, r2, #16
 901 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** }
 902              		.loc 1 690 0
 903 0012 BD46     		mov	sp, r7
 904 0014 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 29


 907              	.L53:
 908              		.align	2
 909              	.L52:
 910 0018 14012040 		.word	1075839252
 911              		.cfi_endproc
 912              	.LFE18:
 913              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 914              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 915              		.align	2
 916              		.global	PWM_ReadPeriod
 917              		.code	16
 918              		.thumb_func
 919              		.type	PWM_ReadPeriod, %function
 920              	PWM_ReadPeriod:
 921              	.LFB19:
 691:.\Generated_Source\PSoC4/PWM.c **** 
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM.c **** {
 922              		.loc 1 708 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 930              		.loc 1 709 0
 931 0004 034B     		ldr	r3, .L56
 932 0006 1B68     		ldr	r3, [r3]
 933 0008 1B04     		lsl	r3, r3, #16
 934 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/PWM.c **** }
 935              		.loc 1 710 0
 936 000c 181C     		mov	r0, r3
 937 000e BD46     		mov	sp, r7
 938              		@ sp needed
 939 0010 80BD     		pop	{r7, pc}
 940              	.L57:
 941 0012 C046     		.align	2
 942              	.L56:
 943 0014 14012040 		.word	1075839252
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 30


 944              		.cfi_endproc
 945              	.LFE19:
 946              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 947              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 948              		.align	2
 949              		.global	PWM_SetCompareSwap
 950              		.code	16
 951              		.thumb_func
 952              		.type	PWM_SetCompareSwap, %function
 953              	PWM_SetCompareSwap:
 954              	.LFB20:
 711:.\Generated_Source\PSoC4/PWM.c **** 
 712:.\Generated_Source\PSoC4/PWM.c **** 
 713:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM.c **** *  None
 731:.\Generated_Source\PSoC4/PWM.c **** *
 732:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM.c **** {
 955              		.loc 1 734 0
 956              		.cfi_startproc
 957 0000 90B5     		push	{r4, r7, lr}
 958              		.cfi_def_cfa_offset 12
 959              		.cfi_offset 4, -12
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 85B0     		sub	sp, sp, #20
 963              		.cfi_def_cfa_offset 32
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM.c **** 
 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 967              		.loc 1 737 0
 968 0008 3C1C     		mov	r4, r7
 969 000a 0F34     		add	r4, r4, #15
 970 000c FFF7FEFF 		bl	CyEnterCriticalSection
 971 0010 031C     		mov	r3, r0
 972 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 31


 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 973              		.loc 1 739 0
 974 0014 0B4B     		ldr	r3, .L59
 975 0016 0B4A     		ldr	r2, .L59
 976 0018 1268     		ldr	r2, [r2]
 977 001a 0121     		mov	r1, #1
 978 001c 8A43     		bic	r2, r1
 979 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 980              		.loc 1 740 0
 981 0020 084B     		ldr	r3, .L59
 982 0022 084A     		ldr	r2, .L59
 983 0024 1168     		ldr	r1, [r2]
 984 0026 7868     		ldr	r0, [r7, #4]
 985 0028 0122     		mov	r2, #1
 986 002a 0240     		and	r2, r0
 987 002c 0A43     		orr	r2, r1
 988 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM.c **** 
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 989              		.loc 1 742 0
 990 0030 3B1C     		mov	r3, r7
 991 0032 0F33     		add	r3, r3, #15
 992 0034 1B78     		ldrb	r3, [r3]
 993 0036 181C     		mov	r0, r3
 994 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/PWM.c **** }
 995              		.loc 1 743 0
 996 003c BD46     		mov	sp, r7
 997 003e 05B0     		add	sp, sp, #20
 998              		@ sp needed
 999 0040 90BD     		pop	{r4, r7, pc}
 1000              	.L60:
 1001 0042 C046     		.align	2
 1002              	.L59:
 1003 0044 00012040 		.word	1075839232
 1004              		.cfi_endproc
 1005              	.LFE20:
 1006              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1007              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1008              		.align	2
 1009              		.global	PWM_WritePeriodBuf
 1010              		.code	16
 1011              		.thumb_func
 1012              		.type	PWM_WritePeriodBuf, %function
 1013              	PWM_WritePeriodBuf:
 1014              	.LFB21:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c **** *
 750:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM.c **** *
 753:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 32


 754:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM.c **** *  None
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM.c **** {
 1015              		.loc 1 761 0
 1016              		.cfi_startproc
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1026              		.loc 1 762 0
 1027 0008 034B     		ldr	r3, .L62
 1028 000a 7A68     		ldr	r2, [r7, #4]
 1029 000c 1204     		lsl	r2, r2, #16
 1030 000e 120C     		lsr	r2, r2, #16
 1031 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** }
 1032              		.loc 1 763 0
 1033 0012 BD46     		mov	sp, r7
 1034 0014 02B0     		add	sp, sp, #8
 1035              		@ sp needed
 1036 0016 80BD     		pop	{r7, pc}
 1037              	.L63:
 1038              		.align	2
 1039              	.L62:
 1040 0018 18012040 		.word	1075839256
 1041              		.cfi_endproc
 1042              	.LFE21:
 1043              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1044              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1045              		.align	2
 1046              		.global	PWM_ReadPeriodBuf
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	PWM_ReadPeriodBuf, %function
 1050              	PWM_ReadPeriodBuf:
 1051              	.LFB22:
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c **** 
 766:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 33


 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM.c **** {
 1052              		.loc 1 781 0
 1053              		.cfi_startproc
 1054 0000 80B5     		push	{r7, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1060              		.loc 1 782 0
 1061 0004 034B     		ldr	r3, .L66
 1062 0006 1B68     		ldr	r3, [r3]
 1063 0008 1B04     		lsl	r3, r3, #16
 1064 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/PWM.c **** }
 1065              		.loc 1 783 0
 1066 000c 181C     		mov	r0, r3
 1067 000e BD46     		mov	sp, r7
 1068              		@ sp needed
 1069 0010 80BD     		pop	{r7, pc}
 1070              	.L67:
 1071 0012 C046     		.align	2
 1072              	.L66:
 1073 0014 18012040 		.word	1075839256
 1074              		.cfi_endproc
 1075              	.LFE22:
 1076              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1077              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1078              		.align	2
 1079              		.global	PWM_SetPeriodSwap
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	PWM_SetPeriodSwap, %function
 1083              	PWM_SetPeriodSwap:
 1084              	.LFB23:
 784:.\Generated_Source\PSoC4/PWM.c **** 
 785:.\Generated_Source\PSoC4/PWM.c **** 
 786:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 34


 798:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM.c **** *  None
 804:.\Generated_Source\PSoC4/PWM.c **** *
 805:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM.c **** {
 1085              		.loc 1 807 0
 1086              		.cfi_startproc
 1087 0000 90B5     		push	{r4, r7, lr}
 1088              		.cfi_def_cfa_offset 12
 1089              		.cfi_offset 4, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 85B0     		sub	sp, sp, #20
 1093              		.cfi_def_cfa_offset 32
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM.c **** 
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1097              		.loc 1 810 0
 1098 0008 3C1C     		mov	r4, r7
 1099 000a 0F34     		add	r4, r4, #15
 1100 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1101 0010 031C     		mov	r3, r0
 1102 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/PWM.c **** 
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1103              		.loc 1 812 0
 1104 0014 0B4B     		ldr	r3, .L69
 1105 0016 0B4A     		ldr	r2, .L69
 1106 0018 1268     		ldr	r2, [r2]
 1107 001a 0221     		mov	r1, #2
 1108 001c 8A43     		bic	r2, r1
 1109 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1110              		.loc 1 813 0
 1111 0020 084B     		ldr	r3, .L69
 1112 0022 084A     		ldr	r2, .L69
 1113 0024 1168     		ldr	r1, [r2]
 1114 0026 7868     		ldr	r0, [r7, #4]
 1115 0028 0122     		mov	r2, #1
 1116 002a 0240     		and	r2, r0
 1117 002c 5200     		lsl	r2, r2, #1
 1118 002e 0A43     		orr	r2, r1
 1119 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1120              		.loc 1 816 0
 1121 0032 3B1C     		mov	r3, r7
 1122 0034 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 35


 1123 0036 1B78     		ldrb	r3, [r3]
 1124 0038 181C     		mov	r0, r3
 1125 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/PWM.c **** }
 1126              		.loc 1 817 0
 1127 003e BD46     		mov	sp, r7
 1128 0040 05B0     		add	sp, sp, #20
 1129              		@ sp needed
 1130 0042 90BD     		pop	{r4, r7, pc}
 1131              	.L70:
 1132              		.align	2
 1133              	.L69:
 1134 0044 00012040 		.word	1075839232
 1135              		.cfi_endproc
 1136              	.LFE23:
 1137              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1138              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1139              		.align	2
 1140              		.global	PWM_WriteCompare
 1141              		.code	16
 1142              		.thumb_func
 1143              		.type	PWM_WriteCompare, %function
 1144              	PWM_WriteCompare:
 1145              	.LFB24:
 818:.\Generated_Source\PSoC4/PWM.c **** 
 819:.\Generated_Source\PSoC4/PWM.c **** 
 820:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 822:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM.c **** *
 824:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM.c **** *
 831:.\Generated_Source\PSoC4/PWM.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM.c **** *  None
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM.c **** {
 1146              		.loc 1 836 0
 1147              		.cfi_startproc
 1148 0000 80B5     		push	{r7, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 82B0     		sub	sp, sp, #8
 1153              		.cfi_def_cfa_offset 16
 1154 0004 00AF     		add	r7, sp, #0
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 36


 840:.\Generated_Source\PSoC4/PWM.c **** 
 841:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM.c **** 
 844:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM.c ****         {
 846:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM.c ****         }
 848:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM.c ****         {
 850:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM.c ****         }
 852:.\Generated_Source\PSoC4/PWM.c ****         else
 853:.\Generated_Source\PSoC4/PWM.c ****         {
 854:.\Generated_Source\PSoC4/PWM.c ****         }
 855:.\Generated_Source\PSoC4/PWM.c ****         
 856:.\Generated_Source\PSoC4/PWM.c ****     
 857:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM.c ****     
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1157              		.loc 1 859 0
 1158 0008 034B     		ldr	r3, .L72
 1159 000a 7A68     		ldr	r2, [r7, #4]
 1160 000c 1204     		lsl	r2, r2, #16
 1161 000e 120C     		lsr	r2, r2, #16
 1162 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/PWM.c **** }
 1163              		.loc 1 860 0
 1164 0012 BD46     		mov	sp, r7
 1165 0014 02B0     		add	sp, sp, #8
 1166              		@ sp needed
 1167 0016 80BD     		pop	{r7, pc}
 1168              	.L73:
 1169              		.align	2
 1170              	.L72:
 1171 0018 0C012040 		.word	1075839244
 1172              		.cfi_endproc
 1173              	.LFE24:
 1174              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1175              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1176              		.align	2
 1177              		.global	PWM_ReadCompare
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	PWM_ReadCompare, %function
 1181              	PWM_ReadCompare:
 1182              	.LFB25:
 861:.\Generated_Source\PSoC4/PWM.c **** 
 862:.\Generated_Source\PSoC4/PWM.c **** 
 863:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 865:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM.c **** *
 867:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 37


 871:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM.c **** *  None
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM.c **** {
 1183              		.loc 1 879 0
 1184              		.cfi_startproc
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM.c ****         
 888:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM.c ****         
 890:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM.c ****         {
 892:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM.c ****         }
 894:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM.c ****         {
 896:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM.c ****         }
 898:.\Generated_Source\PSoC4/PWM.c ****         else
 899:.\Generated_Source\PSoC4/PWM.c ****         {
 900:.\Generated_Source\PSoC4/PWM.c ****         }
 901:.\Generated_Source\PSoC4/PWM.c **** 
 902:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM.c ****     #else
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1191              		.loc 1 904 0
 1192 0004 034B     		ldr	r3, .L76
 1193 0006 1B68     		ldr	r3, [r3]
 1194 0008 1B04     		lsl	r3, r3, #16
 1195 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** }
 1196              		.loc 1 906 0
 1197 000c 181C     		mov	r0, r3
 1198 000e BD46     		mov	sp, r7
 1199              		@ sp needed
 1200 0010 80BD     		pop	{r7, pc}
 1201              	.L77:
 1202 0012 C046     		.align	2
 1203              	.L76:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 38


 1204 0014 0C012040 		.word	1075839244
 1205              		.cfi_endproc
 1206              	.LFE25:
 1207              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1208              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1209              		.align	2
 1210              		.global	PWM_WriteCompareBuf
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	PWM_WriteCompareBuf, %function
 1214              	PWM_WriteCompareBuf:
 1215              	.LFB26:
 907:.\Generated_Source\PSoC4/PWM.c **** 
 908:.\Generated_Source\PSoC4/PWM.c **** 
 909:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM.c **** *
 913:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM.c **** *
 917:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM.c **** *
 920:.\Generated_Source\PSoC4/PWM.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM.c **** *  None
 922:.\Generated_Source\PSoC4/PWM.c **** *
 923:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM.c **** {
 1216              		.loc 1 925 0
 1217              		.cfi_startproc
 1218 0000 80B5     		push	{r7, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 7, -8
 1221              		.cfi_offset 14, -4
 1222 0002 82B0     		sub	sp, sp, #8
 1223              		.cfi_def_cfa_offset 16
 1224 0004 00AF     		add	r7, sp, #0
 1225              		.cfi_def_cfa_register 7
 1226 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM.c **** 
 933:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM.c ****         {
 935:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM.c ****         }
 937:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM.c ****         {
 939:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 39


 941:.\Generated_Source\PSoC4/PWM.c ****         else
 942:.\Generated_Source\PSoC4/PWM.c ****         {
 943:.\Generated_Source\PSoC4/PWM.c ****         }
 944:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM.c ****     
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1227              		.loc 1 946 0
 1228 0008 034B     		ldr	r3, .L79
 1229 000a 7A68     		ldr	r2, [r7, #4]
 1230 000c 1204     		lsl	r2, r2, #16
 1231 000e 120C     		lsr	r2, r2, #16
 1232 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/PWM.c **** }
 1233              		.loc 1 947 0
 1234 0012 BD46     		mov	sp, r7
 1235 0014 02B0     		add	sp, sp, #8
 1236              		@ sp needed
 1237 0016 80BD     		pop	{r7, pc}
 1238              	.L80:
 1239              		.align	2
 1240              	.L79:
 1241 0018 10012040 		.word	1075839248
 1242              		.cfi_endproc
 1243              	.LFE26:
 1244              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1245              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1246              		.align	2
 1247              		.global	PWM_ReadCompareBuf
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	PWM_ReadCompareBuf, %function
 1251              	PWM_ReadCompareBuf:
 1252              	.LFB27:
 948:.\Generated_Source\PSoC4/PWM.c **** 
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM.c **** *
 954:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM.c **** *
 958:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM.c **** *  None
 960:.\Generated_Source\PSoC4/PWM.c **** *
 961:.\Generated_Source\PSoC4/PWM.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM.c **** *
 964:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM.c **** {
 1253              		.loc 1 966 0
 1254              		.cfi_startproc
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 40


 1258              		.cfi_offset 14, -4
 1259 0002 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM.c **** 
 972:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM.c **** 
 975:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM.c ****         
 977:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM.c ****         {
 979:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM.c ****         }
 981:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM.c ****         {
 983:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM.c ****         }
 985:.\Generated_Source\PSoC4/PWM.c ****         else
 986:.\Generated_Source\PSoC4/PWM.c ****         {
 987:.\Generated_Source\PSoC4/PWM.c ****         }
 988:.\Generated_Source\PSoC4/PWM.c **** 
 989:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM.c ****     #else
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1261              		.loc 1 991 0
 1262 0004 034B     		ldr	r3, .L83
 1263 0006 1B68     		ldr	r3, [r3]
 1264 0008 1B04     		lsl	r3, r3, #16
 1265 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM.c **** }
 1266              		.loc 1 993 0
 1267 000c 181C     		mov	r0, r3
 1268 000e BD46     		mov	sp, r7
 1269              		@ sp needed
 1270 0010 80BD     		pop	{r7, pc}
 1271              	.L84:
 1272 0012 C046     		.align	2
 1273              	.L83:
 1274 0014 10012040 		.word	1075839248
 1275              		.cfi_endproc
 1276              	.LFE27:
 1277              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1278              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1279              		.align	2
 1280              		.global	PWM_ReadCapture
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	PWM_ReadCapture, %function
 1284              	PWM_ReadCapture:
 1285              	.LFB28:
 994:.\Generated_Source\PSoC4/PWM.c **** 
 995:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 41


 996:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 998:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM.c **** *
1000:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM.c **** *
1004:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM.c **** *  None
1006:.\Generated_Source\PSoC4/PWM.c **** *
1007:.\Generated_Source\PSoC4/PWM.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM.c **** *
1010:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM.c **** {
 1286              		.loc 1 1012 0
 1287              		.cfi_startproc
 1288 0000 80B5     		push	{r7, lr}
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 7, -8
 1291              		.cfi_offset 14, -4
 1292 0002 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1294              		.loc 1 1013 0
 1295 0004 034B     		ldr	r3, .L87
 1296 0006 1B68     		ldr	r3, [r3]
 1297 0008 1B04     		lsl	r3, r3, #16
 1298 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/PWM.c **** }
 1299              		.loc 1 1014 0
 1300 000c 181C     		mov	r0, r3
 1301 000e BD46     		mov	sp, r7
 1302              		@ sp needed
 1303 0010 80BD     		pop	{r7, pc}
 1304              	.L88:
 1305 0012 C046     		.align	2
 1306              	.L87:
 1307 0014 0C012040 		.word	1075839244
 1308              		.cfi_endproc
 1309              	.LFE28:
 1310              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1311              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1312              		.align	2
 1313              		.global	PWM_ReadCaptureBuf
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	PWM_ReadCaptureBuf, %function
 1317              	PWM_ReadCaptureBuf:
 1318              	.LFB29:
1015:.\Generated_Source\PSoC4/PWM.c **** 
1016:.\Generated_Source\PSoC4/PWM.c **** 
1017:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 42


1020:.\Generated_Source\PSoC4/PWM.c **** *
1021:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM.c **** *
1025:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM.c **** *  None
1027:.\Generated_Source\PSoC4/PWM.c **** *
1028:.\Generated_Source\PSoC4/PWM.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM.c **** *
1031:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM.c **** {
 1319              		.loc 1 1033 0
 1320              		.cfi_startproc
 1321 0000 80B5     		push	{r7, lr}
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 7, -8
 1324              		.cfi_offset 14, -4
 1325 0002 00AF     		add	r7, sp, #0
 1326              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1327              		.loc 1 1034 0
 1328 0004 034B     		ldr	r3, .L91
 1329 0006 1B68     		ldr	r3, [r3]
 1330 0008 1B04     		lsl	r3, r3, #16
 1331 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/PWM.c **** }
 1332              		.loc 1 1035 0
 1333 000c 181C     		mov	r0, r3
 1334 000e BD46     		mov	sp, r7
 1335              		@ sp needed
 1336 0010 80BD     		pop	{r7, pc}
 1337              	.L92:
 1338 0012 C046     		.align	2
 1339              	.L91:
 1340 0014 10012040 		.word	1075839248
 1341              		.cfi_endproc
 1342              	.LFE29:
 1343              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1344              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1345              		.align	2
 1346              		.global	PWM_SetCaptureMode
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	PWM_SetCaptureMode, %function
 1350              	PWM_SetCaptureMode:
 1351              	.LFB30:
1036:.\Generated_Source\PSoC4/PWM.c **** 
1037:.\Generated_Source\PSoC4/PWM.c **** 
1038:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 43


1044:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM.c **** *
1055:.\Generated_Source\PSoC4/PWM.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM.c **** *  None
1057:.\Generated_Source\PSoC4/PWM.c **** *
1058:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM.c **** {
 1352              		.loc 1 1060 0
 1353              		.cfi_startproc
 1354 0000 90B5     		push	{r4, r7, lr}
 1355              		.cfi_def_cfa_offset 12
 1356              		.cfi_offset 4, -12
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 85B0     		sub	sp, sp, #20
 1360              		.cfi_def_cfa_offset 32
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1364              		.loc 1 1063 0
 1365 0008 3C1C     		mov	r4, r7
 1366 000a 0F34     		add	r4, r4, #15
 1367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1368 0010 031C     		mov	r3, r0
 1369 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/PWM.c **** 
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1370              		.loc 1 1065 0
 1371 0014 0A4B     		ldr	r3, .L94
 1372 0016 0A4A     		ldr	r2, .L94
 1373 0018 1268     		ldr	r2, [r2]
 1374 001a 0321     		mov	r1, #3
 1375 001c 8A43     		bic	r2, r1
 1376 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1377              		.loc 1 1066 0
 1378 0020 074B     		ldr	r3, .L94
 1379 0022 074A     		ldr	r2, .L94
 1380 0024 1168     		ldr	r1, [r2]
 1381 0026 7A68     		ldr	r2, [r7, #4]
 1382 0028 0A43     		orr	r2, r1
 1383 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/PWM.c **** 
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 44


 1384              		.loc 1 1068 0
 1385 002c 3B1C     		mov	r3, r7
 1386 002e 0F33     		add	r3, r3, #15
 1387 0030 1B78     		ldrb	r3, [r3]
 1388 0032 181C     		mov	r0, r3
 1389 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/PWM.c **** }
 1390              		.loc 1 1069 0
 1391 0038 BD46     		mov	sp, r7
 1392 003a 05B0     		add	sp, sp, #20
 1393              		@ sp needed
 1394 003c 90BD     		pop	{r4, r7, pc}
 1395              	.L95:
 1396 003e C046     		.align	2
 1397              	.L94:
 1398 0040 24012040 		.word	1075839268
 1399              		.cfi_endproc
 1400              	.LFE30:
 1401              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1402              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1403              		.align	2
 1404              		.global	PWM_SetReloadMode
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	PWM_SetReloadMode, %function
 1408              	PWM_SetReloadMode:
 1409              	.LFB31:
1070:.\Generated_Source\PSoC4/PWM.c **** 
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM.c **** *
1076:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM.c **** *
1080:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM.c **** *
1088:.\Generated_Source\PSoC4/PWM.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM.c **** *  None
1090:.\Generated_Source\PSoC4/PWM.c **** *
1091:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM.c **** {
 1410              		.loc 1 1093 0
 1411              		.cfi_startproc
 1412 0000 90B5     		push	{r4, r7, lr}
 1413              		.cfi_def_cfa_offset 12
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 7, -8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 45


 1416              		.cfi_offset 14, -4
 1417 0002 85B0     		sub	sp, sp, #20
 1418              		.cfi_def_cfa_offset 32
 1419 0004 00AF     		add	r7, sp, #0
 1420              		.cfi_def_cfa_register 7
 1421 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM.c **** 
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1422              		.loc 1 1096 0
 1423 0008 3C1C     		mov	r4, r7
 1424 000a 0F34     		add	r4, r4, #15
 1425 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1426 0010 031C     		mov	r3, r0
 1427 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1428              		.loc 1 1098 0
 1429 0014 0A4B     		ldr	r3, .L97
 1430 0016 0A4A     		ldr	r2, .L97
 1431 0018 1268     		ldr	r2, [r2]
 1432 001a 3021     		mov	r1, #48
 1433 001c 8A43     		bic	r2, r1
 1434 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1435              		.loc 1 1099 0
 1436 0020 074B     		ldr	r3, .L97
 1437 0022 074A     		ldr	r2, .L97
 1438 0024 1168     		ldr	r1, [r2]
 1439 0026 7A68     		ldr	r2, [r7, #4]
 1440 0028 1201     		lsl	r2, r2, #4
 1441 002a 0A43     		orr	r2, r1
 1442 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/PWM.c **** 
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1443              		.loc 1 1101 0
 1444 002e 3B1C     		mov	r3, r7
 1445 0030 0F33     		add	r3, r3, #15
 1446 0032 1B78     		ldrb	r3, [r3]
 1447 0034 181C     		mov	r0, r3
 1448 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/PWM.c **** }
 1449              		.loc 1 1102 0
 1450 003a BD46     		mov	sp, r7
 1451 003c 05B0     		add	sp, sp, #20
 1452              		@ sp needed
 1453 003e 90BD     		pop	{r4, r7, pc}
 1454              	.L98:
 1455              		.align	2
 1456              	.L97:
 1457 0040 24012040 		.word	1075839268
 1458              		.cfi_endproc
 1459              	.LFE31:
 1460              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1461              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1462              		.align	2
 1463              		.global	PWM_SetStartMode
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 46


 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	PWM_SetStartMode, %function
 1467              	PWM_SetStartMode:
 1468              	.LFB32:
1103:.\Generated_Source\PSoC4/PWM.c **** 
1104:.\Generated_Source\PSoC4/PWM.c **** 
1105:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1107:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** *
1109:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM.c **** *
1113:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM.c **** *
1121:.\Generated_Source\PSoC4/PWM.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM.c **** *  None
1123:.\Generated_Source\PSoC4/PWM.c **** *
1124:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM.c **** {
 1469              		.loc 1 1126 0
 1470              		.cfi_startproc
 1471 0000 90B5     		push	{r4, r7, lr}
 1472              		.cfi_def_cfa_offset 12
 1473              		.cfi_offset 4, -12
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 85B0     		sub	sp, sp, #20
 1477              		.cfi_def_cfa_offset 32
 1478 0004 00AF     		add	r7, sp, #0
 1479              		.cfi_def_cfa_register 7
 1480 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM.c **** 
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1481              		.loc 1 1129 0
 1482 0008 3C1C     		mov	r4, r7
 1483 000a 0F34     		add	r4, r4, #15
 1484 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1485 0010 031C     		mov	r3, r0
 1486 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1487              		.loc 1 1131 0
 1488 0014 0A4B     		ldr	r3, .L100
 1489 0016 0A4A     		ldr	r2, .L100
 1490 0018 1168     		ldr	r1, [r2]
 1491 001a 0A4A     		ldr	r2, .L100+4
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 47


 1492 001c 0A40     		and	r2, r1
 1493 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1494              		.loc 1 1132 0
 1495 0020 074B     		ldr	r3, .L100
 1496 0022 074A     		ldr	r2, .L100
 1497 0024 1168     		ldr	r1, [r2]
 1498 0026 7A68     		ldr	r2, [r7, #4]
 1499 0028 1202     		lsl	r2, r2, #8
 1500 002a 0A43     		orr	r2, r1
 1501 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/PWM.c **** 
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1502              		.loc 1 1134 0
 1503 002e 3B1C     		mov	r3, r7
 1504 0030 0F33     		add	r3, r3, #15
 1505 0032 1B78     		ldrb	r3, [r3]
 1506 0034 181C     		mov	r0, r3
 1507 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/PWM.c **** }
 1508              		.loc 1 1135 0
 1509 003a BD46     		mov	sp, r7
 1510 003c 05B0     		add	sp, sp, #20
 1511              		@ sp needed
 1512 003e 90BD     		pop	{r4, r7, pc}
 1513              	.L101:
 1514              		.align	2
 1515              	.L100:
 1516 0040 24012040 		.word	1075839268
 1517 0044 FFFCFFFF 		.word	-769
 1518              		.cfi_endproc
 1519              	.LFE32:
 1520              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1521              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1522              		.align	2
 1523              		.global	PWM_SetStopMode
 1524              		.code	16
 1525              		.thumb_func
 1526              		.type	PWM_SetStopMode, %function
 1527              	PWM_SetStopMode:
 1528              	.LFB33:
1136:.\Generated_Source\PSoC4/PWM.c **** 
1137:.\Generated_Source\PSoC4/PWM.c **** 
1138:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1140:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** *
1142:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM.c **** *
1145:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 48


1152:.\Generated_Source\PSoC4/PWM.c **** *
1153:.\Generated_Source\PSoC4/PWM.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM.c **** *  None
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM.c **** {
 1529              		.loc 1 1158 0
 1530              		.cfi_startproc
 1531 0000 90B5     		push	{r4, r7, lr}
 1532              		.cfi_def_cfa_offset 12
 1533              		.cfi_offset 4, -12
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 85B0     		sub	sp, sp, #20
 1537              		.cfi_def_cfa_offset 32
 1538 0004 00AF     		add	r7, sp, #0
 1539              		.cfi_def_cfa_register 7
 1540 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1541              		.loc 1 1161 0
 1542 0008 3C1C     		mov	r4, r7
 1543 000a 0F34     		add	r4, r4, #15
 1544 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1545 0010 031C     		mov	r3, r0
 1546 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1547              		.loc 1 1163 0
 1548 0014 0A4B     		ldr	r3, .L103
 1549 0016 0A4A     		ldr	r2, .L103
 1550 0018 1268     		ldr	r2, [r2]
 1551 001a C021     		mov	r1, #192
 1552 001c 8A43     		bic	r2, r1
 1553 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1554              		.loc 1 1164 0
 1555 0020 074B     		ldr	r3, .L103
 1556 0022 074A     		ldr	r2, .L103
 1557 0024 1168     		ldr	r1, [r2]
 1558 0026 7A68     		ldr	r2, [r7, #4]
 1559 0028 9201     		lsl	r2, r2, #6
 1560 002a 0A43     		orr	r2, r1
 1561 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1562              		.loc 1 1166 0
 1563 002e 3B1C     		mov	r3, r7
 1564 0030 0F33     		add	r3, r3, #15
 1565 0032 1B78     		ldrb	r3, [r3]
 1566 0034 181C     		mov	r0, r3
 1567 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/PWM.c **** }
 1568              		.loc 1 1167 0
 1569 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 49


 1570 003c 05B0     		add	sp, sp, #20
 1571              		@ sp needed
 1572 003e 90BD     		pop	{r4, r7, pc}
 1573              	.L104:
 1574              		.align	2
 1575              	.L103:
 1576 0040 24012040 		.word	1075839268
 1577              		.cfi_endproc
 1578              	.LFE33:
 1579              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1580              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1581              		.align	2
 1582              		.global	PWM_SetCountMode
 1583              		.code	16
 1584              		.thumb_func
 1585              		.type	PWM_SetCountMode, %function
 1586              	PWM_SetCountMode:
 1587              	.LFB34:
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c **** 
1170:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1172:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM.c **** *
1178:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM.c **** *
1186:.\Generated_Source\PSoC4/PWM.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM.c **** *  None
1188:.\Generated_Source\PSoC4/PWM.c **** *
1189:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM.c **** {
 1588              		.loc 1 1191 0
 1589              		.cfi_startproc
 1590 0000 90B5     		push	{r4, r7, lr}
 1591              		.cfi_def_cfa_offset 12
 1592              		.cfi_offset 4, -12
 1593              		.cfi_offset 7, -8
 1594              		.cfi_offset 14, -4
 1595 0002 85B0     		sub	sp, sp, #20
 1596              		.cfi_def_cfa_offset 32
 1597 0004 00AF     		add	r7, sp, #0
 1598              		.cfi_def_cfa_register 7
 1599 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM.c **** 
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 50


 1600              		.loc 1 1194 0
 1601 0008 3C1C     		mov	r4, r7
 1602 000a 0F34     		add	r4, r4, #15
 1603 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1604 0010 031C     		mov	r3, r0
 1605 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1606              		.loc 1 1196 0
 1607 0014 0A4B     		ldr	r3, .L106
 1608 0016 0A4A     		ldr	r2, .L106
 1609 0018 1268     		ldr	r2, [r2]
 1610 001a 0C21     		mov	r1, #12
 1611 001c 8A43     		bic	r2, r1
 1612 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1613              		.loc 1 1197 0
 1614 0020 074B     		ldr	r3, .L106
 1615 0022 074A     		ldr	r2, .L106
 1616 0024 1168     		ldr	r1, [r2]
 1617 0026 7A68     		ldr	r2, [r7, #4]
 1618 0028 9200     		lsl	r2, r2, #2
 1619 002a 0A43     		orr	r2, r1
 1620 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/PWM.c **** 
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1621              		.loc 1 1199 0
 1622 002e 3B1C     		mov	r3, r7
 1623 0030 0F33     		add	r3, r3, #15
 1624 0032 1B78     		ldrb	r3, [r3]
 1625 0034 181C     		mov	r0, r3
 1626 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/PWM.c **** }
 1627              		.loc 1 1200 0
 1628 003a BD46     		mov	sp, r7
 1629 003c 05B0     		add	sp, sp, #20
 1630              		@ sp needed
 1631 003e 90BD     		pop	{r4, r7, pc}
 1632              	.L107:
 1633              		.align	2
 1634              	.L106:
 1635 0040 24012040 		.word	1075839268
 1636              		.cfi_endproc
 1637              	.LFE34:
 1638              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1639              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1640              		.align	2
 1641              		.global	PWM_TriggerCommand
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	PWM_TriggerCommand, %function
 1645              	PWM_TriggerCommand:
 1646              	.LFB35:
1201:.\Generated_Source\PSoC4/PWM.c **** 
1202:.\Generated_Source\PSoC4/PWM.c **** 
1203:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 51


1205:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** *
1207:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM.c **** *
1212:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM.c **** *  None
1228:.\Generated_Source\PSoC4/PWM.c **** *
1229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM.c **** {
 1647              		.loc 1 1231 0
 1648              		.cfi_startproc
 1649 0000 90B5     		push	{r4, r7, lr}
 1650              		.cfi_def_cfa_offset 12
 1651              		.cfi_offset 4, -12
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 85B0     		sub	sp, sp, #20
 1655              		.cfi_def_cfa_offset 32
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 1659 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1660              		.loc 1 1234 0
 1661 000a 3C1C     		mov	r4, r7
 1662 000c 0F34     		add	r4, r4, #15
 1663 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1664 0012 031C     		mov	r3, r0
 1665 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/PWM.c **** 
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1666              		.loc 1 1236 0
 1667 0016 084B     		ldr	r3, .L109
 1668 0018 3A68     		ldr	r2, [r7]
 1669 001a 7968     		ldr	r1, [r7, #4]
 1670 001c 081C     		mov	r0, r1
 1671 001e 9040     		lsl	r0, r0, r2
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 52


 1672 0020 021C     		mov	r2, r0
 1673 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1674              		.loc 1 1238 0
 1675 0024 3B1C     		mov	r3, r7
 1676 0026 0F33     		add	r3, r3, #15
 1677 0028 1B78     		ldrb	r3, [r3]
 1678 002a 181C     		mov	r0, r3
 1679 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/PWM.c **** }
 1680              		.loc 1 1239 0
 1681 0030 BD46     		mov	sp, r7
 1682 0032 05B0     		add	sp, sp, #20
 1683              		@ sp needed
 1684 0034 90BD     		pop	{r4, r7, pc}
 1685              	.L110:
 1686 0036 C046     		.align	2
 1687              	.L109:
 1688 0038 08002040 		.word	1075838984
 1689              		.cfi_endproc
 1690              	.LFE35:
 1691              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1692              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1693              		.align	2
 1694              		.global	PWM_ReadStatus
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	PWM_ReadStatus, %function
 1698              	PWM_ReadStatus:
 1699              	.LFB36:
1240:.\Generated_Source\PSoC4/PWM.c **** 
1241:.\Generated_Source\PSoC4/PWM.c **** 
1242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM.c **** *
1246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1248:.\Generated_Source\PSoC4/PWM.c **** *
1249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM.c **** *  None
1251:.\Generated_Source\PSoC4/PWM.c **** *
1252:.\Generated_Source\PSoC4/PWM.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM.c **** *
1258:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM.c **** {
 1700              		.loc 1 1260 0
 1701              		.cfi_startproc
 1702 0000 80B5     		push	{r7, lr}
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 53


 1705              		.cfi_offset 14, -4
 1706 0002 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1708              		.loc 1 1261 0
 1709 0004 054B     		ldr	r3, .L113
 1710 0006 1B68     		ldr	r3, [r3]
 1711 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1712              		.loc 1 1262 0
 1713 000a 044B     		ldr	r3, .L113
 1714 000c 1968     		ldr	r1, [r3]
 1715 000e 0123     		mov	r3, #1
 1716 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1717              		.loc 1 1261 0
 1718 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/PWM.c **** }
 1719              		.loc 1 1263 0
 1720 0014 181C     		mov	r0, r3
 1721 0016 BD46     		mov	sp, r7
 1722              		@ sp needed
 1723 0018 80BD     		pop	{r7, pc}
 1724              	.L114:
 1725 001a C046     		.align	2
 1726              	.L113:
 1727 001c 04012040 		.word	1075839236
 1728              		.cfi_endproc
 1729              	.LFE36:
 1730              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1731              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1732              		.align	2
 1733              		.global	PWM_SetInterruptMode
 1734              		.code	16
 1735              		.thumb_func
 1736              		.type	PWM_SetInterruptMode, %function
 1737              	PWM_SetInterruptMode:
 1738              	.LFB37:
1264:.\Generated_Source\PSoC4/PWM.c **** 
1265:.\Generated_Source\PSoC4/PWM.c **** 
1266:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM.c **** *
1270:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM.c **** *
1280:.\Generated_Source\PSoC4/PWM.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM.c **** *  None
1282:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 54


1283:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM.c **** {
 1739              		.loc 1 1285 0
 1740              		.cfi_startproc
 1741 0000 80B5     		push	{r7, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 7, -8
 1744              		.cfi_offset 14, -4
 1745 0002 82B0     		sub	sp, sp, #8
 1746              		.cfi_def_cfa_offset 16
 1747 0004 00AF     		add	r7, sp, #0
 1748              		.cfi_def_cfa_register 7
 1749 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1750              		.loc 1 1286 0
 1751 0008 024B     		ldr	r3, .L116
 1752 000a 7A68     		ldr	r2, [r7, #4]
 1753 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/PWM.c **** }
 1754              		.loc 1 1287 0
 1755 000e BD46     		mov	sp, r7
 1756 0010 02B0     		add	sp, sp, #8
 1757              		@ sp needed
 1758 0012 80BD     		pop	{r7, pc}
 1759              	.L117:
 1760              		.align	2
 1761              	.L116:
 1762 0014 38012040 		.word	1075839288
 1763              		.cfi_endproc
 1764              	.LFE37:
 1765              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1766              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1767              		.align	2
 1768              		.global	PWM_GetInterruptSourceMasked
 1769              		.code	16
 1770              		.thumb_func
 1771              		.type	PWM_GetInterruptSourceMasked, %function
 1772              	PWM_GetInterruptSourceMasked:
 1773              	.LFB38:
1288:.\Generated_Source\PSoC4/PWM.c **** 
1289:.\Generated_Source\PSoC4/PWM.c **** 
1290:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM.c **** *
1294:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM.c **** *   None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 55


1305:.\Generated_Source\PSoC4/PWM.c **** *
1306:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM.c **** {
 1774              		.loc 1 1308 0
 1775              		.cfi_startproc
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 00AF     		add	r7, sp, #0
 1781              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1782              		.loc 1 1309 0
 1783 0004 024B     		ldr	r3, .L120
 1784 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/PWM.c **** }
 1785              		.loc 1 1310 0
 1786 0008 181C     		mov	r0, r3
 1787 000a BD46     		mov	sp, r7
 1788              		@ sp needed
 1789 000c 80BD     		pop	{r7, pc}
 1790              	.L121:
 1791 000e C046     		.align	2
 1792              	.L120:
 1793 0010 3C012040 		.word	1075839292
 1794              		.cfi_endproc
 1795              	.LFE38:
 1796              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1797              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1798              		.align	2
 1799              		.global	PWM_GetInterruptSource
 1800              		.code	16
 1801              		.thumb_func
 1802              		.type	PWM_GetInterruptSource, %function
 1803              	PWM_GetInterruptSource:
 1804              	.LFB39:
1311:.\Generated_Source\PSoC4/PWM.c **** 
1312:.\Generated_Source\PSoC4/PWM.c **** 
1313:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM.c **** *
1317:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM.c **** *
1320:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM.c **** *  None
1322:.\Generated_Source\PSoC4/PWM.c **** *
1323:.\Generated_Source\PSoC4/PWM.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 56


1331:.\Generated_Source\PSoC4/PWM.c **** {
 1805              		.loc 1 1331 0
 1806              		.cfi_startproc
 1807 0000 80B5     		push	{r7, lr}
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 7, -8
 1810              		.cfi_offset 14, -4
 1811 0002 00AF     		add	r7, sp, #0
 1812              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1813              		.loc 1 1332 0
 1814 0004 024B     		ldr	r3, .L124
 1815 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/PWM.c **** }
 1816              		.loc 1 1333 0
 1817 0008 181C     		mov	r0, r3
 1818 000a BD46     		mov	sp, r7
 1819              		@ sp needed
 1820 000c 80BD     		pop	{r7, pc}
 1821              	.L125:
 1822 000e C046     		.align	2
 1823              	.L124:
 1824 0010 30012040 		.word	1075839280
 1825              		.cfi_endproc
 1826              	.LFE39:
 1827              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1828              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1829              		.align	2
 1830              		.global	PWM_ClearInterrupt
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	PWM_ClearInterrupt, %function
 1834              	PWM_ClearInterrupt:
 1835              	.LFB40:
1334:.\Generated_Source\PSoC4/PWM.c **** 
1335:.\Generated_Source\PSoC4/PWM.c **** 
1336:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM.c **** *
1340:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM.c **** *
1343:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM.c **** *
1349:.\Generated_Source\PSoC4/PWM.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM.c **** *  None
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM.c **** {
 1836              		.loc 1 1354 0
 1837              		.cfi_startproc
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 57


 1838 0000 80B5     		push	{r7, lr}
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 82B0     		sub	sp, sp, #8
 1843              		.cfi_def_cfa_offset 16
 1844 0004 00AF     		add	r7, sp, #0
 1845              		.cfi_def_cfa_register 7
 1846 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1847              		.loc 1 1355 0
 1848 0008 024B     		ldr	r3, .L127
 1849 000a 7A68     		ldr	r2, [r7, #4]
 1850 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/PWM.c **** }
 1851              		.loc 1 1356 0
 1852 000e BD46     		mov	sp, r7
 1853 0010 02B0     		add	sp, sp, #8
 1854              		@ sp needed
 1855 0012 80BD     		pop	{r7, pc}
 1856              	.L128:
 1857              		.align	2
 1858              	.L127:
 1859 0014 30012040 		.word	1075839280
 1860              		.cfi_endproc
 1861              	.LFE40:
 1862              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1863              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1864              		.align	2
 1865              		.global	PWM_SetInterrupt
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	PWM_SetInterrupt, %function
 1869              	PWM_SetInterrupt:
 1870              	.LFB41:
1357:.\Generated_Source\PSoC4/PWM.c **** 
1358:.\Generated_Source\PSoC4/PWM.c **** 
1359:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM.c **** *
1363:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM.c **** *
1366:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM.c **** *
1372:.\Generated_Source\PSoC4/PWM.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM.c **** *  None
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM.c **** {
 1871              		.loc 1 1377 0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 58


 1872              		.cfi_startproc
 1873 0000 80B5     		push	{r7, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 7, -8
 1876              		.cfi_offset 14, -4
 1877 0002 82B0     		sub	sp, sp, #8
 1878              		.cfi_def_cfa_offset 16
 1879 0004 00AF     		add	r7, sp, #0
 1880              		.cfi_def_cfa_register 7
 1881 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1882              		.loc 1 1378 0
 1883 0008 024B     		ldr	r3, .L130
 1884 000a 7A68     		ldr	r2, [r7, #4]
 1885 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/PWM.c **** }
 1886              		.loc 1 1379 0
 1887 000e BD46     		mov	sp, r7
 1888 0010 02B0     		add	sp, sp, #8
 1889              		@ sp needed
 1890 0012 80BD     		pop	{r7, pc}
 1891              	.L131:
 1892              		.align	2
 1893              	.L130:
 1894 0014 34012040 		.word	1075839284
 1895              		.cfi_endproc
 1896              	.LFE41:
 1897              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1898              		.text
 1899              	.Letext0:
 1900              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1901              		.section	.debug_info,"",%progbits
 1902              	.Ldebug_info0:
 1903 0000 EC060000 		.4byte	0x6ec
 1904 0004 0400     		.2byte	0x4
 1905 0006 00000000 		.4byte	.Ldebug_abbrev0
 1906 000a 04       		.byte	0x4
 1907 000b 01       		.uleb128 0x1
 1908 000c F9020000 		.4byte	.LASF76
 1909 0010 01       		.byte	0x1
 1910 0011 D3000000 		.4byte	.LASF77
 1911 0015 EF010000 		.4byte	.LASF78
 1912 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1913 001d 00000000 		.4byte	0
 1914 0021 00000000 		.4byte	.Ldebug_line0
 1915 0025 02       		.uleb128 0x2
 1916 0026 01       		.byte	0x1
 1917 0027 06       		.byte	0x6
 1918 0028 8B000000 		.4byte	.LASF0
 1919 002c 02       		.uleb128 0x2
 1920 002d 01       		.byte	0x1
 1921 002e 08       		.byte	0x8
 1922 002f 97030000 		.4byte	.LASF1
 1923 0033 02       		.uleb128 0x2
 1924 0034 02       		.byte	0x2
 1925 0035 05       		.byte	0x5
 1926 0036 CE030000 		.4byte	.LASF2
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 59


 1927 003a 02       		.uleb128 0x2
 1928 003b 02       		.byte	0x2
 1929 003c 07       		.byte	0x7
 1930 003d DC010000 		.4byte	.LASF3
 1931 0041 02       		.uleb128 0x2
 1932 0042 04       		.byte	0x4
 1933 0043 05       		.byte	0x5
 1934 0044 F2000000 		.4byte	.LASF4
 1935 0048 02       		.uleb128 0x2
 1936 0049 04       		.byte	0x4
 1937 004a 07       		.byte	0x7
 1938 004b C1010000 		.4byte	.LASF5
 1939 004f 02       		.uleb128 0x2
 1940 0050 08       		.byte	0x8
 1941 0051 05       		.byte	0x5
 1942 0052 7D000000 		.4byte	.LASF6
 1943 0056 02       		.uleb128 0x2
 1944 0057 08       		.byte	0x8
 1945 0058 07       		.byte	0x7
 1946 0059 2B000000 		.4byte	.LASF7
 1947 005d 03       		.uleb128 0x3
 1948 005e 04       		.byte	0x4
 1949 005f 05       		.byte	0x5
 1950 0060 696E7400 		.ascii	"int\000"
 1951 0064 02       		.uleb128 0x2
 1952 0065 04       		.byte	0x4
 1953 0066 07       		.byte	0x7
 1954 0067 99010000 		.4byte	.LASF8
 1955 006b 04       		.uleb128 0x4
 1956 006c FB000000 		.4byte	.LASF9
 1957 0070 02       		.byte	0x2
 1958 0071 A1       		.byte	0xa1
 1959 0072 2C000000 		.4byte	0x2c
 1960 0076 04       		.uleb128 0x4
 1961 0077 48010000 		.4byte	.LASF10
 1962 007b 02       		.byte	0x2
 1963 007c A3       		.byte	0xa3
 1964 007d 48000000 		.4byte	0x48
 1965 0081 02       		.uleb128 0x2
 1966 0082 04       		.byte	0x4
 1967 0083 04       		.byte	0x4
 1968 0084 E9020000 		.4byte	.LASF11
 1969 0088 02       		.uleb128 0x2
 1970 0089 08       		.byte	0x8
 1971 008a 04       		.byte	0x4
 1972 008b 01010000 		.4byte	.LASF12
 1973 008f 02       		.uleb128 0x2
 1974 0090 01       		.byte	0x1
 1975 0091 08       		.byte	0x8
 1976 0092 24040000 		.4byte	.LASF13
 1977 0096 05       		.uleb128 0x5
 1978 0097 87020000 		.4byte	.LASF14
 1979 009b 02       		.byte	0x2
 1980 009c 4D01     		.2byte	0x14d
 1981 009e A2000000 		.4byte	0xa2
 1982 00a2 06       		.uleb128 0x6
 1983 00a3 76000000 		.4byte	0x76
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 60


 1984 00a7 02       		.uleb128 0x2
 1985 00a8 04       		.byte	0x4
 1986 00a9 07       		.byte	0x7
 1987 00aa A8020000 		.4byte	.LASF15
 1988 00ae 07       		.uleb128 0x7
 1989 00af A5030000 		.4byte	.LASF16
 1990 00b3 01       		.byte	0x1
 1991 00b4 26       		.byte	0x26
 1992 00b5 00000000 		.4byte	.LFB2
 1993 00b9 50000000 		.4byte	.LFE2-.LFB2
 1994 00bd 01       		.uleb128 0x1
 1995 00be 9C       		.byte	0x9c
 1996 00bf 08       		.uleb128 0x8
 1997 00c0 06000000 		.4byte	.LASF18
 1998 00c4 01       		.byte	0x1
 1999 00c5 B1       		.byte	0xb1
 2000 00c6 00000000 		.4byte	.LFB3
 2001 00ca 38000000 		.4byte	.LFE3-.LFB3
 2002 00ce 01       		.uleb128 0x1
 2003 00cf 9C       		.byte	0x9c
 2004 00d0 E3000000 		.4byte	0xe3
 2005 00d4 09       		.uleb128 0x9
 2006 00d5 85040000 		.4byte	.LASF20
 2007 00d9 01       		.byte	0x1
 2008 00da B3       		.byte	0xb3
 2009 00db 6B000000 		.4byte	0x6b
 2010 00df 02       		.uleb128 0x2
 2011 00e0 91       		.byte	0x91
 2012 00e1 6F       		.sleb128 -17
 2013 00e2 00       		.byte	0
 2014 00e3 07       		.uleb128 0x7
 2015 00e4 49020000 		.4byte	.LASF17
 2016 00e8 01       		.byte	0x1
 2017 00e9 E0       		.byte	0xe0
 2018 00ea 00000000 		.4byte	.LFB4
 2019 00ee 24000000 		.4byte	.LFE4-.LFB4
 2020 00f2 01       		.uleb128 0x1
 2021 00f3 9C       		.byte	0x9c
 2022 00f4 08       		.uleb128 0x8
 2023 00f5 2E010000 		.4byte	.LASF19
 2024 00f9 01       		.byte	0x1
 2025 00fa FA       		.byte	0xfa
 2026 00fb 00000000 		.4byte	.LFB5
 2027 00ff 30000000 		.4byte	.LFE5-.LFB5
 2028 0103 01       		.uleb128 0x1
 2029 0104 9C       		.byte	0x9c
 2030 0105 18010000 		.4byte	0x118
 2031 0109 09       		.uleb128 0x9
 2032 010a 85040000 		.4byte	.LASF20
 2033 010e 01       		.byte	0x1
 2034 010f FC       		.byte	0xfc
 2035 0110 6B000000 		.4byte	0x6b
 2036 0114 02       		.uleb128 0x2
 2037 0115 91       		.byte	0x91
 2038 0116 6F       		.sleb128 -17
 2039 0117 00       		.byte	0
 2040 0118 0A       		.uleb128 0xa
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 61


 2041 0119 B5040000 		.4byte	.LASF21
 2042 011d 01       		.byte	0x1
 2043 011e 1F01     		.2byte	0x11f
 2044 0120 00000000 		.4byte	.LFB6
 2045 0124 48000000 		.4byte	.LFE6-.LFB6
 2046 0128 01       		.uleb128 0x1
 2047 0129 9C       		.byte	0x9c
 2048 012a 4D010000 		.4byte	0x14d
 2049 012e 0B       		.uleb128 0xb
 2050 012f 29040000 		.4byte	.LASF23
 2051 0133 01       		.byte	0x1
 2052 0134 1F01     		.2byte	0x11f
 2053 0136 76000000 		.4byte	0x76
 2054 013a 02       		.uleb128 0x2
 2055 013b 91       		.byte	0x91
 2056 013c 64       		.sleb128 -28
 2057 013d 0C       		.uleb128 0xc
 2058 013e 85040000 		.4byte	.LASF20
 2059 0142 01       		.byte	0x1
 2060 0143 2101     		.2byte	0x121
 2061 0145 6B000000 		.4byte	0x6b
 2062 0149 02       		.uleb128 0x2
 2063 014a 91       		.byte	0x91
 2064 014b 6F       		.sleb128 -17
 2065 014c 00       		.byte	0
 2066 014d 0A       		.uleb128 0xa
 2067 014e 16040000 		.4byte	.LASF22
 2068 0152 01       		.byte	0x1
 2069 0153 4001     		.2byte	0x140
 2070 0155 00000000 		.4byte	.LFB7
 2071 0159 48000000 		.4byte	.LFE7-.LFB7
 2072 015d 01       		.uleb128 0x1
 2073 015e 9C       		.byte	0x9c
 2074 015f 82010000 		.4byte	0x182
 2075 0163 0B       		.uleb128 0xb
 2076 0164 55000000 		.4byte	.LASF24
 2077 0168 01       		.byte	0x1
 2078 0169 4001     		.2byte	0x140
 2079 016b 76000000 		.4byte	0x76
 2080 016f 02       		.uleb128 0x2
 2081 0170 91       		.byte	0x91
 2082 0171 64       		.sleb128 -28
 2083 0172 0C       		.uleb128 0xc
 2084 0173 85040000 		.4byte	.LASF20
 2085 0177 01       		.byte	0x1
 2086 0178 4201     		.2byte	0x142
 2087 017a 6B000000 		.4byte	0x6b
 2088 017e 02       		.uleb128 0x2
 2089 017f 91       		.byte	0x91
 2090 0180 6F       		.sleb128 -17
 2091 0181 00       		.byte	0
 2092 0182 0A       		.uleb128 0xa
 2093 0183 38020000 		.4byte	.LASF25
 2094 0187 01       		.byte	0x1
 2095 0188 6501     		.2byte	0x165
 2096 018a 00000000 		.4byte	.LFB8
 2097 018e 48000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 62


 2098 0192 01       		.uleb128 0x1
 2099 0193 9C       		.byte	0x9c
 2100 0194 B7010000 		.4byte	0x1b7
 2101 0198 0B       		.uleb128 0xb
 2102 0199 EF020000 		.4byte	.LASF26
 2103 019d 01       		.byte	0x1
 2104 019e 6501     		.2byte	0x165
 2105 01a0 76000000 		.4byte	0x76
 2106 01a4 02       		.uleb128 0x2
 2107 01a5 91       		.byte	0x91
 2108 01a6 64       		.sleb128 -28
 2109 01a7 0C       		.uleb128 0xc
 2110 01a8 85040000 		.4byte	.LASF20
 2111 01ac 01       		.byte	0x1
 2112 01ad 6701     		.2byte	0x167
 2113 01af 6B000000 		.4byte	0x6b
 2114 01b3 02       		.uleb128 0x2
 2115 01b4 91       		.byte	0x91
 2116 01b5 6F       		.sleb128 -17
 2117 01b6 00       		.byte	0
 2118 01b7 0A       		.uleb128 0xa
 2119 01b8 C8020000 		.4byte	.LASF27
 2120 01bc 01       		.byte	0x1
 2121 01bd 8501     		.2byte	0x185
 2122 01bf 00000000 		.4byte	.LFB9
 2123 01c3 4C000000 		.4byte	.LFE9-.LFB9
 2124 01c7 01       		.uleb128 0x1
 2125 01c8 9C       		.byte	0x9c
 2126 01c9 EC010000 		.4byte	0x1ec
 2127 01cd 0B       		.uleb128 0xb
 2128 01ce A7040000 		.4byte	.LASF28
 2129 01d2 01       		.byte	0x1
 2130 01d3 8501     		.2byte	0x185
 2131 01d5 76000000 		.4byte	0x76
 2132 01d9 02       		.uleb128 0x2
 2133 01da 91       		.byte	0x91
 2134 01db 64       		.sleb128 -28
 2135 01dc 0C       		.uleb128 0xc
 2136 01dd 85040000 		.4byte	.LASF20
 2137 01e1 01       		.byte	0x1
 2138 01e2 8701     		.2byte	0x187
 2139 01e4 6B000000 		.4byte	0x6b
 2140 01e8 02       		.uleb128 0x2
 2141 01e9 91       		.byte	0x91
 2142 01ea 6F       		.sleb128 -17
 2143 01eb 00       		.byte	0
 2144 01ec 0D       		.uleb128 0xd
 2145 01ed BF030000 		.4byte	.LASF29
 2146 01f1 01       		.byte	0x1
 2147 01f2 BB01     		.2byte	0x1bb
 2148 01f4 00000000 		.4byte	.LFB10
 2149 01f8 1C000000 		.4byte	.LFE10-.LFB10
 2150 01fc 01       		.uleb128 0x1
 2151 01fd 9C       		.byte	0x9c
 2152 01fe 12020000 		.4byte	0x212
 2153 0202 0B       		.uleb128 0xb
 2154 0203 D3010000 		.4byte	.LASF30
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 63


 2155 0207 01       		.byte	0x1
 2156 0208 BB01     		.2byte	0x1bb
 2157 020a 76000000 		.4byte	0x76
 2158 020e 02       		.uleb128 0x2
 2159 020f 91       		.byte	0x91
 2160 0210 74       		.sleb128 -12
 2161 0211 00       		.byte	0
 2162 0212 0A       		.uleb128 0xa
 2163 0213 11000000 		.4byte	.LASF31
 2164 0217 01       		.byte	0x1
 2165 0218 DF01     		.2byte	0x1df
 2166 021a 00000000 		.4byte	.LFB11
 2167 021e 48000000 		.4byte	.LFE11-.LFB11
 2168 0222 01       		.uleb128 0x1
 2169 0223 9C       		.byte	0x9c
 2170 0224 47020000 		.4byte	0x247
 2171 0228 0B       		.uleb128 0xb
 2172 0229 B1020000 		.4byte	.LASF32
 2173 022d 01       		.byte	0x1
 2174 022e DF01     		.2byte	0x1df
 2175 0230 76000000 		.4byte	0x76
 2176 0234 02       		.uleb128 0x2
 2177 0235 91       		.byte	0x91
 2178 0236 64       		.sleb128 -28
 2179 0237 0C       		.uleb128 0xc
 2180 0238 85040000 		.4byte	.LASF20
 2181 023c 01       		.byte	0x1
 2182 023d E101     		.2byte	0x1e1
 2183 023f 6B000000 		.4byte	0x6b
 2184 0243 02       		.uleb128 0x2
 2185 0244 91       		.byte	0x91
 2186 0245 6F       		.sleb128 -17
 2187 0246 00       		.byte	0
 2188 0247 0A       		.uleb128 0xa
 2189 0248 C1040000 		.4byte	.LASF33
 2190 024c 01       		.byte	0x1
 2191 024d 0102     		.2byte	0x201
 2192 024f 00000000 		.4byte	.LFB12
 2193 0253 48000000 		.4byte	.LFE12-.LFB12
 2194 0257 01       		.uleb128 0x1
 2195 0258 9C       		.byte	0x9c
 2196 0259 7C020000 		.4byte	0x27c
 2197 025d 0B       		.uleb128 0xb
 2198 025e AE030000 		.4byte	.LASF34
 2199 0262 01       		.byte	0x1
 2200 0263 0102     		.2byte	0x201
 2201 0265 76000000 		.4byte	0x76
 2202 0269 02       		.uleb128 0x2
 2203 026a 91       		.byte	0x91
 2204 026b 64       		.sleb128 -28
 2205 026c 0C       		.uleb128 0xc
 2206 026d 85040000 		.4byte	.LASF20
 2207 0271 01       		.byte	0x1
 2208 0272 0302     		.2byte	0x203
 2209 0274 6B000000 		.4byte	0x6b
 2210 0278 02       		.uleb128 0x2
 2211 0279 91       		.byte	0x91
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 64


 2212 027a 6F       		.sleb128 -17
 2213 027b 00       		.byte	0
 2214 027c 0A       		.uleb128 0xa
 2215 027d A6010000 		.4byte	.LASF35
 2216 0281 01       		.byte	0x1
 2217 0282 2202     		.2byte	0x222
 2218 0284 00000000 		.4byte	.LFB13
 2219 0288 4C000000 		.4byte	.LFE13-.LFB13
 2220 028c 01       		.uleb128 0x1
 2221 028d 9C       		.byte	0x9c
 2222 028e B1020000 		.4byte	0x2b1
 2223 0292 0B       		.uleb128 0xb
 2224 0293 80010000 		.4byte	.LASF36
 2225 0297 01       		.byte	0x1
 2226 0298 2202     		.2byte	0x222
 2227 029a 76000000 		.4byte	0x76
 2228 029e 02       		.uleb128 0x2
 2229 029f 91       		.byte	0x91
 2230 02a0 64       		.sleb128 -28
 2231 02a1 0C       		.uleb128 0xc
 2232 02a2 85040000 		.4byte	.LASF20
 2233 02a6 01       		.byte	0x1
 2234 02a7 2402     		.2byte	0x224
 2235 02a9 6B000000 		.4byte	0x6b
 2236 02ad 02       		.uleb128 0x2
 2237 02ae 91       		.byte	0x91
 2238 02af 6F       		.sleb128 -17
 2239 02b0 00       		.byte	0
 2240 02b1 0A       		.uleb128 0xa
 2241 02b2 37010000 		.4byte	.LASF37
 2242 02b6 01       		.byte	0x1
 2243 02b7 4302     		.2byte	0x243
 2244 02b9 00000000 		.4byte	.LFB14
 2245 02bd 48000000 		.4byte	.LFE14-.LFB14
 2246 02c1 01       		.uleb128 0x1
 2247 02c2 9C       		.byte	0x9c
 2248 02c3 E6020000 		.4byte	0x2e6
 2249 02c7 0B       		.uleb128 0xb
 2250 02c8 6C010000 		.4byte	.LASF38
 2251 02cc 01       		.byte	0x1
 2252 02cd 4302     		.2byte	0x243
 2253 02cf 76000000 		.4byte	0x76
 2254 02d3 02       		.uleb128 0x2
 2255 02d4 91       		.byte	0x91
 2256 02d5 64       		.sleb128 -28
 2257 02d6 0C       		.uleb128 0xc
 2258 02d7 85040000 		.4byte	.LASF20
 2259 02db 01       		.byte	0x1
 2260 02dc 4502     		.2byte	0x245
 2261 02de 6B000000 		.4byte	0x6b
 2262 02e2 02       		.uleb128 0x2
 2263 02e3 91       		.byte	0x91
 2264 02e4 6F       		.sleb128 -17
 2265 02e5 00       		.byte	0
 2266 02e6 0D       		.uleb128 0xd
 2267 02e7 5C000000 		.4byte	.LASF39
 2268 02eb 01       		.byte	0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 65


 2269 02ec 6102     		.2byte	0x261
 2270 02ee 00000000 		.4byte	.LFB15
 2271 02f2 1C000000 		.4byte	.LFE15-.LFB15
 2272 02f6 01       		.uleb128 0x1
 2273 02f7 9C       		.byte	0x9c
 2274 02f8 0C030000 		.4byte	0x30c
 2275 02fc 0B       		.uleb128 0xb
 2276 02fd 00000000 		.4byte	.LASF40
 2277 0301 01       		.byte	0x1
 2278 0302 6102     		.2byte	0x261
 2279 0304 76000000 		.4byte	0x76
 2280 0308 02       		.uleb128 0x2
 2281 0309 91       		.byte	0x91
 2282 030a 74       		.sleb128 -12
 2283 030b 00       		.byte	0
 2284 030c 0E       		.uleb128 0xe
 2285 030d 6D000000 		.4byte	.LASF45
 2286 0311 01       		.byte	0x1
 2287 0312 7502     		.2byte	0x275
 2288 0314 76000000 		.4byte	0x76
 2289 0318 00000000 		.4byte	.LFB16
 2290 031c 18000000 		.4byte	.LFE16-.LFB16
 2291 0320 01       		.uleb128 0x1
 2292 0321 9C       		.byte	0x9c
 2293 0322 0A       		.uleb128 0xa
 2294 0323 F8040000 		.4byte	.LASF41
 2295 0327 01       		.byte	0x1
 2296 0328 9202     		.2byte	0x292
 2297 032a 00000000 		.4byte	.LFB17
 2298 032e 48000000 		.4byte	.LFE17-.LFB17
 2299 0332 01       		.uleb128 0x1
 2300 0333 9C       		.byte	0x9c
 2301 0334 57030000 		.4byte	0x357
 2302 0338 0B       		.uleb128 0xb
 2303 0339 51040000 		.4byte	.LASF42
 2304 033d 01       		.byte	0x1
 2305 033e 9202     		.2byte	0x292
 2306 0340 76000000 		.4byte	0x76
 2307 0344 02       		.uleb128 0x2
 2308 0345 91       		.byte	0x91
 2309 0346 64       		.sleb128 -28
 2310 0347 0C       		.uleb128 0xc
 2311 0348 85040000 		.4byte	.LASF20
 2312 034c 01       		.byte	0x1
 2313 034d 9402     		.2byte	0x294
 2314 034f 6B000000 		.4byte	0x6b
 2315 0353 02       		.uleb128 0x2
 2316 0354 91       		.byte	0x91
 2317 0355 6F       		.sleb128 -17
 2318 0356 00       		.byte	0
 2319 0357 0D       		.uleb128 0xd
 2320 0358 77020000 		.4byte	.LASF43
 2321 035c 01       		.byte	0x1
 2322 035d AF02     		.2byte	0x2af
 2323 035f 00000000 		.4byte	.LFB18
 2324 0363 1C000000 		.4byte	.LFE18-.LFB18
 2325 0367 01       		.uleb128 0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 66


 2326 0368 9C       		.byte	0x9c
 2327 0369 7D030000 		.4byte	0x37d
 2328 036d 0B       		.uleb128 0xb
 2329 036e 24000000 		.4byte	.LASF44
 2330 0372 01       		.byte	0x1
 2331 0373 AF02     		.2byte	0x2af
 2332 0375 76000000 		.4byte	0x76
 2333 0379 02       		.uleb128 0x2
 2334 037a 91       		.byte	0x91
 2335 037b 74       		.sleb128 -12
 2336 037c 00       		.byte	0
 2337 037d 0E       		.uleb128 0xe
 2338 037e 99020000 		.4byte	.LASF46
 2339 0382 01       		.byte	0x1
 2340 0383 C302     		.2byte	0x2c3
 2341 0385 76000000 		.4byte	0x76
 2342 0389 00000000 		.4byte	.LFB19
 2343 038d 18000000 		.4byte	.LFE19-.LFB19
 2344 0391 01       		.uleb128 0x1
 2345 0392 9C       		.byte	0x9c
 2346 0393 0A       		.uleb128 0xa
 2347 0394 1B010000 		.4byte	.LASF47
 2348 0398 01       		.byte	0x1
 2349 0399 DD02     		.2byte	0x2dd
 2350 039b 00000000 		.4byte	.LFB20
 2351 039f 48000000 		.4byte	.LFE20-.LFB20
 2352 03a3 01       		.uleb128 0x1
 2353 03a4 9C       		.byte	0x9c
 2354 03a5 C8030000 		.4byte	0x3c8
 2355 03a9 0B       		.uleb128 0xb
 2356 03aa D6040000 		.4byte	.LASF48
 2357 03ae 01       		.byte	0x1
 2358 03af DD02     		.2byte	0x2dd
 2359 03b1 76000000 		.4byte	0x76
 2360 03b5 02       		.uleb128 0x2
 2361 03b6 91       		.byte	0x91
 2362 03b7 64       		.sleb128 -28
 2363 03b8 0C       		.uleb128 0xc
 2364 03b9 85040000 		.4byte	.LASF20
 2365 03bd 01       		.byte	0x1
 2366 03be DF02     		.2byte	0x2df
 2367 03c0 6B000000 		.4byte	0x6b
 2368 03c4 02       		.uleb128 0x2
 2369 03c5 91       		.byte	0x91
 2370 03c6 6F       		.sleb128 -17
 2371 03c7 00       		.byte	0
 2372 03c8 0D       		.uleb128 0xd
 2373 03c9 03040000 		.4byte	.LASF49
 2374 03cd 01       		.byte	0x1
 2375 03ce F802     		.2byte	0x2f8
 2376 03d0 00000000 		.4byte	.LFB21
 2377 03d4 1C000000 		.4byte	.LFE21-.LFB21
 2378 03d8 01       		.uleb128 0x1
 2379 03d9 9C       		.byte	0x9c
 2380 03da EE030000 		.4byte	0x3ee
 2381 03de 0B       		.uleb128 0xb
 2382 03df 68040000 		.4byte	.LASF50
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 67


 2383 03e3 01       		.byte	0x1
 2384 03e4 F802     		.2byte	0x2f8
 2385 03e6 76000000 		.4byte	0x76
 2386 03ea 02       		.uleb128 0x2
 2387 03eb 91       		.byte	0x91
 2388 03ec 74       		.sleb128 -12
 2389 03ed 00       		.byte	0
 2390 03ee 0E       		.uleb128 0xe
 2391 03ef D7020000 		.4byte	.LASF51
 2392 03f3 01       		.byte	0x1
 2393 03f4 0C03     		.2byte	0x30c
 2394 03f6 76000000 		.4byte	0x76
 2395 03fa 00000000 		.4byte	.LFB22
 2396 03fe 18000000 		.4byte	.LFE22-.LFB22
 2397 0402 01       		.uleb128 0x1
 2398 0403 9C       		.byte	0x9c
 2399 0404 0A       		.uleb128 0xa
 2400 0405 85030000 		.4byte	.LASF52
 2401 0409 01       		.byte	0x1
 2402 040a 2603     		.2byte	0x326
 2403 040c 00000000 		.4byte	.LFB23
 2404 0410 48000000 		.4byte	.LFE23-.LFB23
 2405 0414 01       		.uleb128 0x1
 2406 0415 9C       		.byte	0x9c
 2407 0416 39040000 		.4byte	0x439
 2408 041a 0B       		.uleb128 0xb
 2409 041b D6040000 		.4byte	.LASF48
 2410 041f 01       		.byte	0x1
 2411 0420 2603     		.2byte	0x326
 2412 0422 76000000 		.4byte	0x76
 2413 0426 02       		.uleb128 0x2
 2414 0427 91       		.byte	0x91
 2415 0428 64       		.sleb128 -28
 2416 0429 0C       		.uleb128 0xc
 2417 042a 85040000 		.4byte	.LASF20
 2418 042e 01       		.byte	0x1
 2419 042f 2803     		.2byte	0x328
 2420 0431 6B000000 		.4byte	0x6b
 2421 0435 02       		.uleb128 0x2
 2422 0436 91       		.byte	0x91
 2423 0437 6F       		.sleb128 -17
 2424 0438 00       		.byte	0
 2425 0439 0D       		.uleb128 0xd
 2426 043a 66020000 		.4byte	.LASF53
 2427 043e 01       		.byte	0x1
 2428 043f 4303     		.2byte	0x343
 2429 0441 00000000 		.4byte	.LFB24
 2430 0445 1C000000 		.4byte	.LFE24-.LFB24
 2431 0449 01       		.uleb128 0x1
 2432 044a 9C       		.byte	0x9c
 2433 044b 5F040000 		.4byte	0x45f
 2434 044f 0B       		.uleb128 0xb
 2435 0450 C0020000 		.4byte	.LASF54
 2436 0454 01       		.byte	0x1
 2437 0455 4303     		.2byte	0x343
 2438 0457 76000000 		.4byte	0x76
 2439 045b 02       		.uleb128 0x2
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 68


 2440 045c 91       		.byte	0x91
 2441 045d 74       		.sleb128 -12
 2442 045e 00       		.byte	0
 2443 045f 0E       		.uleb128 0xe
 2444 0460 0B050000 		.4byte	.LASF55
 2445 0464 01       		.byte	0x1
 2446 0465 6E03     		.2byte	0x36e
 2447 0467 76000000 		.4byte	0x76
 2448 046b 00000000 		.4byte	.LFB25
 2449 046f 18000000 		.4byte	.LFE25-.LFB25
 2450 0473 01       		.uleb128 0x1
 2451 0474 9C       		.byte	0x9c
 2452 0475 0D       		.uleb128 0xd
 2453 0476 97000000 		.4byte	.LASF56
 2454 047a 01       		.byte	0x1
 2455 047b 9C03     		.2byte	0x39c
 2456 047d 00000000 		.4byte	.LFB26
 2457 0481 1C000000 		.4byte	.LFE26-.LFB26
 2458 0485 01       		.uleb128 0x1
 2459 0486 9C       		.byte	0x9c
 2460 0487 9B040000 		.4byte	0x49b
 2461 048b 0B       		.uleb128 0xb
 2462 048c 5D040000 		.4byte	.LASF57
 2463 0490 01       		.byte	0x1
 2464 0491 9C03     		.2byte	0x39c
 2465 0493 76000000 		.4byte	0x76
 2466 0497 02       		.uleb128 0x2
 2467 0498 91       		.byte	0x91
 2468 0499 74       		.sleb128 -12
 2469 049a 00       		.byte	0
 2470 049b 0E       		.uleb128 0xe
 2471 049c 08010000 		.4byte	.LASF58
 2472 04a0 01       		.byte	0x1
 2473 04a1 C503     		.2byte	0x3c5
 2474 04a3 76000000 		.4byte	0x76
 2475 04a7 00000000 		.4byte	.LFB27
 2476 04ab 18000000 		.4byte	.LFE27-.LFB27
 2477 04af 01       		.uleb128 0x1
 2478 04b0 9C       		.byte	0x9c
 2479 04b1 0E       		.uleb128 0xe
 2480 04b2 75030000 		.4byte	.LASF59
 2481 04b6 01       		.byte	0x1
 2482 04b7 F303     		.2byte	0x3f3
 2483 04b9 76000000 		.4byte	0x76
 2484 04bd 00000000 		.4byte	.LFB28
 2485 04c1 18000000 		.4byte	.LFE28-.LFB28
 2486 04c5 01       		.uleb128 0x1
 2487 04c6 9C       		.byte	0x9c
 2488 04c7 0E       		.uleb128 0xe
 2489 04c8 72040000 		.4byte	.LASF60
 2490 04cc 01       		.byte	0x1
 2491 04cd 0804     		.2byte	0x408
 2492 04cf 76000000 		.4byte	0x76
 2493 04d3 00000000 		.4byte	.LFB29
 2494 04d7 18000000 		.4byte	.LFE29-.LFB29
 2495 04db 01       		.uleb128 0x1
 2496 04dc 9C       		.byte	0x9c
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 69


 2497 04dd 0A       		.uleb128 0xa
 2498 04de 42000000 		.4byte	.LASF61
 2499 04e2 01       		.byte	0x1
 2500 04e3 2304     		.2byte	0x423
 2501 04e5 00000000 		.4byte	.LFB30
 2502 04e9 44000000 		.4byte	.LFE30-.LFB30
 2503 04ed 01       		.uleb128 0x1
 2504 04ee 9C       		.byte	0x9c
 2505 04ef 12050000 		.4byte	0x512
 2506 04f3 0B       		.uleb128 0xb
 2507 04f4 60010000 		.4byte	.LASF62
 2508 04f8 01       		.byte	0x1
 2509 04f9 2304     		.2byte	0x423
 2510 04fb 76000000 		.4byte	0x76
 2511 04ff 02       		.uleb128 0x2
 2512 0500 91       		.byte	0x91
 2513 0501 64       		.sleb128 -28
 2514 0502 0C       		.uleb128 0xc
 2515 0503 85040000 		.4byte	.LASF20
 2516 0507 01       		.byte	0x1
 2517 0508 2504     		.2byte	0x425
 2518 050a 6B000000 		.4byte	0x6b
 2519 050e 02       		.uleb128 0x2
 2520 050f 91       		.byte	0x91
 2521 0510 6F       		.sleb128 -17
 2522 0511 00       		.byte	0
 2523 0512 0A       		.uleb128 0xa
 2524 0513 3F040000 		.4byte	.LASF63
 2525 0517 01       		.byte	0x1
 2526 0518 4404     		.2byte	0x444
 2527 051a 00000000 		.4byte	.LFB31
 2528 051e 44000000 		.4byte	.LFE31-.LFB31
 2529 0522 01       		.uleb128 0x1
 2530 0523 9C       		.byte	0x9c
 2531 0524 47050000 		.4byte	0x547
 2532 0528 0B       		.uleb128 0xb
 2533 0529 60010000 		.4byte	.LASF62
 2534 052d 01       		.byte	0x1
 2535 052e 4404     		.2byte	0x444
 2536 0530 76000000 		.4byte	0x76
 2537 0534 02       		.uleb128 0x2
 2538 0535 91       		.byte	0x91
 2539 0536 64       		.sleb128 -28
 2540 0537 0C       		.uleb128 0xc
 2541 0538 85040000 		.4byte	.LASF20
 2542 053c 01       		.byte	0x1
 2543 053d 4604     		.2byte	0x446
 2544 053f 6B000000 		.4byte	0x6b
 2545 0543 02       		.uleb128 0x2
 2546 0544 91       		.byte	0x91
 2547 0545 6F       		.sleb128 -17
 2548 0546 00       		.byte	0
 2549 0547 0A       		.uleb128 0xa
 2550 0548 4F010000 		.4byte	.LASF64
 2551 054c 01       		.byte	0x1
 2552 054d 6504     		.2byte	0x465
 2553 054f 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 70


 2554 0553 48000000 		.4byte	.LFE32-.LFB32
 2555 0557 01       		.uleb128 0x1
 2556 0558 9C       		.byte	0x9c
 2557 0559 7C050000 		.4byte	0x57c
 2558 055d 0B       		.uleb128 0xb
 2559 055e 60010000 		.4byte	.LASF62
 2560 0562 01       		.byte	0x1
 2561 0563 6504     		.2byte	0x465
 2562 0565 76000000 		.4byte	0x76
 2563 0569 02       		.uleb128 0x2
 2564 056a 91       		.byte	0x91
 2565 056b 64       		.sleb128 -28
 2566 056c 0C       		.uleb128 0xc
 2567 056d 85040000 		.4byte	.LASF20
 2568 0571 01       		.byte	0x1
 2569 0572 6704     		.2byte	0x467
 2570 0574 6B000000 		.4byte	0x6b
 2571 0578 02       		.uleb128 0x2
 2572 0579 91       		.byte	0x91
 2573 057a 6F       		.sleb128 -17
 2574 057b 00       		.byte	0
 2575 057c 0A       		.uleb128 0xa
 2576 057d 89010000 		.4byte	.LASF65
 2577 0581 01       		.byte	0x1
 2578 0582 8504     		.2byte	0x485
 2579 0584 00000000 		.4byte	.LFB33
 2580 0588 44000000 		.4byte	.LFE33-.LFB33
 2581 058c 01       		.uleb128 0x1
 2582 058d 9C       		.byte	0x9c
 2583 058e B1050000 		.4byte	0x5b1
 2584 0592 0B       		.uleb128 0xb
 2585 0593 60010000 		.4byte	.LASF62
 2586 0597 01       		.byte	0x1
 2587 0598 8504     		.2byte	0x485
 2588 059a 76000000 		.4byte	0x76
 2589 059e 02       		.uleb128 0x2
 2590 059f 91       		.byte	0x91
 2591 05a0 64       		.sleb128 -28
 2592 05a1 0C       		.uleb128 0xc
 2593 05a2 85040000 		.4byte	.LASF20
 2594 05a6 01       		.byte	0x1
 2595 05a7 8704     		.2byte	0x487
 2596 05a9 6B000000 		.4byte	0x6b
 2597 05ad 02       		.uleb128 0x2
 2598 05ae 91       		.byte	0x91
 2599 05af 6F       		.sleb128 -17
 2600 05b0 00       		.byte	0
 2601 05b1 0A       		.uleb128 0xa
 2602 05b2 96040000 		.4byte	.LASF66
 2603 05b6 01       		.byte	0x1
 2604 05b7 A604     		.2byte	0x4a6
 2605 05b9 00000000 		.4byte	.LFB34
 2606 05bd 44000000 		.4byte	.LFE34-.LFB34
 2607 05c1 01       		.uleb128 0x1
 2608 05c2 9C       		.byte	0x9c
 2609 05c3 E6050000 		.4byte	0x5e6
 2610 05c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 71


 2611 05c8 60010000 		.4byte	.LASF62
 2612 05cc 01       		.byte	0x1
 2613 05cd A604     		.2byte	0x4a6
 2614 05cf 76000000 		.4byte	0x76
 2615 05d3 02       		.uleb128 0x2
 2616 05d4 91       		.byte	0x91
 2617 05d5 64       		.sleb128 -28
 2618 05d6 0C       		.uleb128 0xc
 2619 05d7 85040000 		.4byte	.LASF20
 2620 05db 01       		.byte	0x1
 2621 05dc A804     		.2byte	0x4a8
 2622 05de 6B000000 		.4byte	0x6b
 2623 05e2 02       		.uleb128 0x2
 2624 05e3 91       		.byte	0x91
 2625 05e4 6F       		.sleb128 -17
 2626 05e5 00       		.byte	0
 2627 05e6 0A       		.uleb128 0xa
 2628 05e7 53020000 		.4byte	.LASF67
 2629 05eb 01       		.byte	0x1
 2630 05ec CE04     		.2byte	0x4ce
 2631 05ee 00000000 		.4byte	.LFB35
 2632 05f2 3C000000 		.4byte	.LFE35-.LFB35
 2633 05f6 01       		.uleb128 0x1
 2634 05f7 9C       		.byte	0x9c
 2635 05f8 2A060000 		.4byte	0x62a
 2636 05fc 0B       		.uleb128 0xb
 2637 05fd 6C010000 		.4byte	.LASF38
 2638 0601 01       		.byte	0x1
 2639 0602 CE04     		.2byte	0x4ce
 2640 0604 76000000 		.4byte	0x76
 2641 0608 02       		.uleb128 0x2
 2642 0609 91       		.byte	0x91
 2643 060a 64       		.sleb128 -28
 2644 060b 0B       		.uleb128 0xb
 2645 060c B9010000 		.4byte	.LASF68
 2646 0610 01       		.byte	0x1
 2647 0611 CE04     		.2byte	0x4ce
 2648 0613 76000000 		.4byte	0x76
 2649 0617 02       		.uleb128 0x2
 2650 0618 91       		.byte	0x91
 2651 0619 60       		.sleb128 -32
 2652 061a 0C       		.uleb128 0xc
 2653 061b 85040000 		.4byte	.LASF20
 2654 061f 01       		.byte	0x1
 2655 0620 D004     		.2byte	0x4d0
 2656 0622 6B000000 		.4byte	0x6b
 2657 0626 02       		.uleb128 0x2
 2658 0627 91       		.byte	0x91
 2659 0628 6F       		.sleb128 -17
 2660 0629 00       		.byte	0
 2661 062a 0E       		.uleb128 0xe
 2662 062b 71010000 		.4byte	.LASF69
 2663 062f 01       		.byte	0x1
 2664 0630 EB04     		.2byte	0x4eb
 2665 0632 76000000 		.4byte	0x76
 2666 0636 00000000 		.4byte	.LFB36
 2667 063a 20000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 72


 2668 063e 01       		.uleb128 0x1
 2669 063f 9C       		.byte	0x9c
 2670 0640 0D       		.uleb128 0xd
 2671 0641 AB000000 		.4byte	.LASF70
 2672 0645 01       		.byte	0x1
 2673 0646 0405     		.2byte	0x504
 2674 0648 00000000 		.4byte	.LFB37
 2675 064c 18000000 		.4byte	.LFE37-.LFB37
 2676 0650 01       		.uleb128 0x1
 2677 0651 9C       		.byte	0x9c
 2678 0652 66060000 		.4byte	0x666
 2679 0656 0B       		.uleb128 0xb
 2680 0657 F5030000 		.4byte	.LASF71
 2681 065b 01       		.byte	0x1
 2682 065c 0405     		.2byte	0x504
 2683 065e 76000000 		.4byte	0x76
 2684 0662 02       		.uleb128 0x2
 2685 0663 91       		.byte	0x91
 2686 0664 74       		.sleb128 -12
 2687 0665 00       		.byte	0
 2688 0666 0E       		.uleb128 0xe
 2689 0667 D8030000 		.4byte	.LASF72
 2690 066b 01       		.byte	0x1
 2691 066c 1B05     		.2byte	0x51b
 2692 066e 76000000 		.4byte	0x76
 2693 0672 00000000 		.4byte	.LFB38
 2694 0676 14000000 		.4byte	.LFE38-.LFB38
 2695 067a 01       		.uleb128 0x1
 2696 067b 9C       		.byte	0x9c
 2697 067c 0E       		.uleb128 0xe
 2698 067d E1040000 		.4byte	.LASF73
 2699 0681 01       		.byte	0x1
 2700 0682 3205     		.2byte	0x532
 2701 0684 76000000 		.4byte	0x76
 2702 0688 00000000 		.4byte	.LFB39
 2703 068c 14000000 		.4byte	.LFE39-.LFB39
 2704 0690 01       		.uleb128 0x1
 2705 0691 9C       		.byte	0x9c
 2706 0692 0D       		.uleb128 0xd
 2707 0693 C0000000 		.4byte	.LASF74
 2708 0697 01       		.byte	0x1
 2709 0698 4905     		.2byte	0x549
 2710 069a 00000000 		.4byte	.LFB40
 2711 069e 18000000 		.4byte	.LFE40-.LFB40
 2712 06a2 01       		.uleb128 0x1
 2713 06a3 9C       		.byte	0x9c
 2714 06a4 B8060000 		.4byte	0x6b8
 2715 06a8 0B       		.uleb128 0xb
 2716 06a9 F5030000 		.4byte	.LASF71
 2717 06ad 01       		.byte	0x1
 2718 06ae 4905     		.2byte	0x549
 2719 06b0 76000000 		.4byte	0x76
 2720 06b4 02       		.uleb128 0x2
 2721 06b5 91       		.byte	0x91
 2722 06b6 74       		.sleb128 -12
 2723 06b7 00       		.byte	0
 2724 06b8 0D       		.uleb128 0xd
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 73


 2725 06b9 2E040000 		.4byte	.LASF75
 2726 06bd 01       		.byte	0x1
 2727 06be 6005     		.2byte	0x560
 2728 06c0 00000000 		.4byte	.LFB41
 2729 06c4 18000000 		.4byte	.LFE41-.LFB41
 2730 06c8 01       		.uleb128 0x1
 2731 06c9 9C       		.byte	0x9c
 2732 06ca DE060000 		.4byte	0x6de
 2733 06ce 0B       		.uleb128 0xb
 2734 06cf F5030000 		.4byte	.LASF71
 2735 06d3 01       		.byte	0x1
 2736 06d4 6005     		.2byte	0x560
 2737 06d6 76000000 		.4byte	0x76
 2738 06da 02       		.uleb128 0x2
 2739 06db 91       		.byte	0x91
 2740 06dc 74       		.sleb128 -12
 2741 06dd 00       		.byte	0
 2742 06de 0F       		.uleb128 0xf
 2743 06df 8D020000 		.4byte	.LASF79
 2744 06e3 01       		.byte	0x1
 2745 06e4 15       		.byte	0x15
 2746 06e5 6B000000 		.4byte	0x6b
 2747 06e9 05       		.uleb128 0x5
 2748 06ea 03       		.byte	0x3
 2749 06eb 00000000 		.4byte	PWM_initVar
 2750 06ef 00       		.byte	0
 2751              		.section	.debug_abbrev,"",%progbits
 2752              	.Ldebug_abbrev0:
 2753 0000 01       		.uleb128 0x1
 2754 0001 11       		.uleb128 0x11
 2755 0002 01       		.byte	0x1
 2756 0003 25       		.uleb128 0x25
 2757 0004 0E       		.uleb128 0xe
 2758 0005 13       		.uleb128 0x13
 2759 0006 0B       		.uleb128 0xb
 2760 0007 03       		.uleb128 0x3
 2761 0008 0E       		.uleb128 0xe
 2762 0009 1B       		.uleb128 0x1b
 2763 000a 0E       		.uleb128 0xe
 2764 000b 55       		.uleb128 0x55
 2765 000c 17       		.uleb128 0x17
 2766 000d 11       		.uleb128 0x11
 2767 000e 01       		.uleb128 0x1
 2768 000f 10       		.uleb128 0x10
 2769 0010 17       		.uleb128 0x17
 2770 0011 00       		.byte	0
 2771 0012 00       		.byte	0
 2772 0013 02       		.uleb128 0x2
 2773 0014 24       		.uleb128 0x24
 2774 0015 00       		.byte	0
 2775 0016 0B       		.uleb128 0xb
 2776 0017 0B       		.uleb128 0xb
 2777 0018 3E       		.uleb128 0x3e
 2778 0019 0B       		.uleb128 0xb
 2779 001a 03       		.uleb128 0x3
 2780 001b 0E       		.uleb128 0xe
 2781 001c 00       		.byte	0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 74


 2782 001d 00       		.byte	0
 2783 001e 03       		.uleb128 0x3
 2784 001f 24       		.uleb128 0x24
 2785 0020 00       		.byte	0
 2786 0021 0B       		.uleb128 0xb
 2787 0022 0B       		.uleb128 0xb
 2788 0023 3E       		.uleb128 0x3e
 2789 0024 0B       		.uleb128 0xb
 2790 0025 03       		.uleb128 0x3
 2791 0026 08       		.uleb128 0x8
 2792 0027 00       		.byte	0
 2793 0028 00       		.byte	0
 2794 0029 04       		.uleb128 0x4
 2795 002a 16       		.uleb128 0x16
 2796 002b 00       		.byte	0
 2797 002c 03       		.uleb128 0x3
 2798 002d 0E       		.uleb128 0xe
 2799 002e 3A       		.uleb128 0x3a
 2800 002f 0B       		.uleb128 0xb
 2801 0030 3B       		.uleb128 0x3b
 2802 0031 0B       		.uleb128 0xb
 2803 0032 49       		.uleb128 0x49
 2804 0033 13       		.uleb128 0x13
 2805 0034 00       		.byte	0
 2806 0035 00       		.byte	0
 2807 0036 05       		.uleb128 0x5
 2808 0037 16       		.uleb128 0x16
 2809 0038 00       		.byte	0
 2810 0039 03       		.uleb128 0x3
 2811 003a 0E       		.uleb128 0xe
 2812 003b 3A       		.uleb128 0x3a
 2813 003c 0B       		.uleb128 0xb
 2814 003d 3B       		.uleb128 0x3b
 2815 003e 05       		.uleb128 0x5
 2816 003f 49       		.uleb128 0x49
 2817 0040 13       		.uleb128 0x13
 2818 0041 00       		.byte	0
 2819 0042 00       		.byte	0
 2820 0043 06       		.uleb128 0x6
 2821 0044 35       		.uleb128 0x35
 2822 0045 00       		.byte	0
 2823 0046 49       		.uleb128 0x49
 2824 0047 13       		.uleb128 0x13
 2825 0048 00       		.byte	0
 2826 0049 00       		.byte	0
 2827 004a 07       		.uleb128 0x7
 2828 004b 2E       		.uleb128 0x2e
 2829 004c 00       		.byte	0
 2830 004d 3F       		.uleb128 0x3f
 2831 004e 19       		.uleb128 0x19
 2832 004f 03       		.uleb128 0x3
 2833 0050 0E       		.uleb128 0xe
 2834 0051 3A       		.uleb128 0x3a
 2835 0052 0B       		.uleb128 0xb
 2836 0053 3B       		.uleb128 0x3b
 2837 0054 0B       		.uleb128 0xb
 2838 0055 27       		.uleb128 0x27
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 75


 2839 0056 19       		.uleb128 0x19
 2840 0057 11       		.uleb128 0x11
 2841 0058 01       		.uleb128 0x1
 2842 0059 12       		.uleb128 0x12
 2843 005a 06       		.uleb128 0x6
 2844 005b 40       		.uleb128 0x40
 2845 005c 18       		.uleb128 0x18
 2846 005d 9642     		.uleb128 0x2116
 2847 005f 19       		.uleb128 0x19
 2848 0060 00       		.byte	0
 2849 0061 00       		.byte	0
 2850 0062 08       		.uleb128 0x8
 2851 0063 2E       		.uleb128 0x2e
 2852 0064 01       		.byte	0x1
 2853 0065 3F       		.uleb128 0x3f
 2854 0066 19       		.uleb128 0x19
 2855 0067 03       		.uleb128 0x3
 2856 0068 0E       		.uleb128 0xe
 2857 0069 3A       		.uleb128 0x3a
 2858 006a 0B       		.uleb128 0xb
 2859 006b 3B       		.uleb128 0x3b
 2860 006c 0B       		.uleb128 0xb
 2861 006d 27       		.uleb128 0x27
 2862 006e 19       		.uleb128 0x19
 2863 006f 11       		.uleb128 0x11
 2864 0070 01       		.uleb128 0x1
 2865 0071 12       		.uleb128 0x12
 2866 0072 06       		.uleb128 0x6
 2867 0073 40       		.uleb128 0x40
 2868 0074 18       		.uleb128 0x18
 2869 0075 9642     		.uleb128 0x2116
 2870 0077 19       		.uleb128 0x19
 2871 0078 01       		.uleb128 0x1
 2872 0079 13       		.uleb128 0x13
 2873 007a 00       		.byte	0
 2874 007b 00       		.byte	0
 2875 007c 09       		.uleb128 0x9
 2876 007d 34       		.uleb128 0x34
 2877 007e 00       		.byte	0
 2878 007f 03       		.uleb128 0x3
 2879 0080 0E       		.uleb128 0xe
 2880 0081 3A       		.uleb128 0x3a
 2881 0082 0B       		.uleb128 0xb
 2882 0083 3B       		.uleb128 0x3b
 2883 0084 0B       		.uleb128 0xb
 2884 0085 49       		.uleb128 0x49
 2885 0086 13       		.uleb128 0x13
 2886 0087 02       		.uleb128 0x2
 2887 0088 18       		.uleb128 0x18
 2888 0089 00       		.byte	0
 2889 008a 00       		.byte	0
 2890 008b 0A       		.uleb128 0xa
 2891 008c 2E       		.uleb128 0x2e
 2892 008d 01       		.byte	0x1
 2893 008e 3F       		.uleb128 0x3f
 2894 008f 19       		.uleb128 0x19
 2895 0090 03       		.uleb128 0x3
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 76


 2896 0091 0E       		.uleb128 0xe
 2897 0092 3A       		.uleb128 0x3a
 2898 0093 0B       		.uleb128 0xb
 2899 0094 3B       		.uleb128 0x3b
 2900 0095 05       		.uleb128 0x5
 2901 0096 27       		.uleb128 0x27
 2902 0097 19       		.uleb128 0x19
 2903 0098 11       		.uleb128 0x11
 2904 0099 01       		.uleb128 0x1
 2905 009a 12       		.uleb128 0x12
 2906 009b 06       		.uleb128 0x6
 2907 009c 40       		.uleb128 0x40
 2908 009d 18       		.uleb128 0x18
 2909 009e 9642     		.uleb128 0x2116
 2910 00a0 19       		.uleb128 0x19
 2911 00a1 01       		.uleb128 0x1
 2912 00a2 13       		.uleb128 0x13
 2913 00a3 00       		.byte	0
 2914 00a4 00       		.byte	0
 2915 00a5 0B       		.uleb128 0xb
 2916 00a6 05       		.uleb128 0x5
 2917 00a7 00       		.byte	0
 2918 00a8 03       		.uleb128 0x3
 2919 00a9 0E       		.uleb128 0xe
 2920 00aa 3A       		.uleb128 0x3a
 2921 00ab 0B       		.uleb128 0xb
 2922 00ac 3B       		.uleb128 0x3b
 2923 00ad 05       		.uleb128 0x5
 2924 00ae 49       		.uleb128 0x49
 2925 00af 13       		.uleb128 0x13
 2926 00b0 02       		.uleb128 0x2
 2927 00b1 18       		.uleb128 0x18
 2928 00b2 00       		.byte	0
 2929 00b3 00       		.byte	0
 2930 00b4 0C       		.uleb128 0xc
 2931 00b5 34       		.uleb128 0x34
 2932 00b6 00       		.byte	0
 2933 00b7 03       		.uleb128 0x3
 2934 00b8 0E       		.uleb128 0xe
 2935 00b9 3A       		.uleb128 0x3a
 2936 00ba 0B       		.uleb128 0xb
 2937 00bb 3B       		.uleb128 0x3b
 2938 00bc 05       		.uleb128 0x5
 2939 00bd 49       		.uleb128 0x49
 2940 00be 13       		.uleb128 0x13
 2941 00bf 02       		.uleb128 0x2
 2942 00c0 18       		.uleb128 0x18
 2943 00c1 00       		.byte	0
 2944 00c2 00       		.byte	0
 2945 00c3 0D       		.uleb128 0xd
 2946 00c4 2E       		.uleb128 0x2e
 2947 00c5 01       		.byte	0x1
 2948 00c6 3F       		.uleb128 0x3f
 2949 00c7 19       		.uleb128 0x19
 2950 00c8 03       		.uleb128 0x3
 2951 00c9 0E       		.uleb128 0xe
 2952 00ca 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 77


 2953 00cb 0B       		.uleb128 0xb
 2954 00cc 3B       		.uleb128 0x3b
 2955 00cd 05       		.uleb128 0x5
 2956 00ce 27       		.uleb128 0x27
 2957 00cf 19       		.uleb128 0x19
 2958 00d0 11       		.uleb128 0x11
 2959 00d1 01       		.uleb128 0x1
 2960 00d2 12       		.uleb128 0x12
 2961 00d3 06       		.uleb128 0x6
 2962 00d4 40       		.uleb128 0x40
 2963 00d5 18       		.uleb128 0x18
 2964 00d6 9742     		.uleb128 0x2117
 2965 00d8 19       		.uleb128 0x19
 2966 00d9 01       		.uleb128 0x1
 2967 00da 13       		.uleb128 0x13
 2968 00db 00       		.byte	0
 2969 00dc 00       		.byte	0
 2970 00dd 0E       		.uleb128 0xe
 2971 00de 2E       		.uleb128 0x2e
 2972 00df 00       		.byte	0
 2973 00e0 3F       		.uleb128 0x3f
 2974 00e1 19       		.uleb128 0x19
 2975 00e2 03       		.uleb128 0x3
 2976 00e3 0E       		.uleb128 0xe
 2977 00e4 3A       		.uleb128 0x3a
 2978 00e5 0B       		.uleb128 0xb
 2979 00e6 3B       		.uleb128 0x3b
 2980 00e7 05       		.uleb128 0x5
 2981 00e8 27       		.uleb128 0x27
 2982 00e9 19       		.uleb128 0x19
 2983 00ea 49       		.uleb128 0x49
 2984 00eb 13       		.uleb128 0x13
 2985 00ec 11       		.uleb128 0x11
 2986 00ed 01       		.uleb128 0x1
 2987 00ee 12       		.uleb128 0x12
 2988 00ef 06       		.uleb128 0x6
 2989 00f0 40       		.uleb128 0x40
 2990 00f1 18       		.uleb128 0x18
 2991 00f2 9742     		.uleb128 0x2117
 2992 00f4 19       		.uleb128 0x19
 2993 00f5 00       		.byte	0
 2994 00f6 00       		.byte	0
 2995 00f7 0F       		.uleb128 0xf
 2996 00f8 34       		.uleb128 0x34
 2997 00f9 00       		.byte	0
 2998 00fa 03       		.uleb128 0x3
 2999 00fb 0E       		.uleb128 0xe
 3000 00fc 3A       		.uleb128 0x3a
 3001 00fd 0B       		.uleb128 0xb
 3002 00fe 3B       		.uleb128 0x3b
 3003 00ff 0B       		.uleb128 0xb
 3004 0100 49       		.uleb128 0x49
 3005 0101 13       		.uleb128 0x13
 3006 0102 3F       		.uleb128 0x3f
 3007 0103 19       		.uleb128 0x19
 3008 0104 02       		.uleb128 0x2
 3009 0105 18       		.uleb128 0x18
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 78


 3010 0106 00       		.byte	0
 3011 0107 00       		.byte	0
 3012 0108 00       		.byte	0
 3013              		.section	.debug_aranges,"",%progbits
 3014 0000 54010000 		.4byte	0x154
 3015 0004 0200     		.2byte	0x2
 3016 0006 00000000 		.4byte	.Ldebug_info0
 3017 000a 04       		.byte	0x4
 3018 000b 00       		.byte	0
 3019 000c 0000     		.2byte	0
 3020 000e 0000     		.2byte	0
 3021 0010 00000000 		.4byte	.LFB2
 3022 0014 50000000 		.4byte	.LFE2-.LFB2
 3023 0018 00000000 		.4byte	.LFB3
 3024 001c 38000000 		.4byte	.LFE3-.LFB3
 3025 0020 00000000 		.4byte	.LFB4
 3026 0024 24000000 		.4byte	.LFE4-.LFB4
 3027 0028 00000000 		.4byte	.LFB5
 3028 002c 30000000 		.4byte	.LFE5-.LFB5
 3029 0030 00000000 		.4byte	.LFB6
 3030 0034 48000000 		.4byte	.LFE6-.LFB6
 3031 0038 00000000 		.4byte	.LFB7
 3032 003c 48000000 		.4byte	.LFE7-.LFB7
 3033 0040 00000000 		.4byte	.LFB8
 3034 0044 48000000 		.4byte	.LFE8-.LFB8
 3035 0048 00000000 		.4byte	.LFB9
 3036 004c 4C000000 		.4byte	.LFE9-.LFB9
 3037 0050 00000000 		.4byte	.LFB10
 3038 0054 1C000000 		.4byte	.LFE10-.LFB10
 3039 0058 00000000 		.4byte	.LFB11
 3040 005c 48000000 		.4byte	.LFE11-.LFB11
 3041 0060 00000000 		.4byte	.LFB12
 3042 0064 48000000 		.4byte	.LFE12-.LFB12
 3043 0068 00000000 		.4byte	.LFB13
 3044 006c 4C000000 		.4byte	.LFE13-.LFB13
 3045 0070 00000000 		.4byte	.LFB14
 3046 0074 48000000 		.4byte	.LFE14-.LFB14
 3047 0078 00000000 		.4byte	.LFB15
 3048 007c 1C000000 		.4byte	.LFE15-.LFB15
 3049 0080 00000000 		.4byte	.LFB16
 3050 0084 18000000 		.4byte	.LFE16-.LFB16
 3051 0088 00000000 		.4byte	.LFB17
 3052 008c 48000000 		.4byte	.LFE17-.LFB17
 3053 0090 00000000 		.4byte	.LFB18
 3054 0094 1C000000 		.4byte	.LFE18-.LFB18
 3055 0098 00000000 		.4byte	.LFB19
 3056 009c 18000000 		.4byte	.LFE19-.LFB19
 3057 00a0 00000000 		.4byte	.LFB20
 3058 00a4 48000000 		.4byte	.LFE20-.LFB20
 3059 00a8 00000000 		.4byte	.LFB21
 3060 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3061 00b0 00000000 		.4byte	.LFB22
 3062 00b4 18000000 		.4byte	.LFE22-.LFB22
 3063 00b8 00000000 		.4byte	.LFB23
 3064 00bc 48000000 		.4byte	.LFE23-.LFB23
 3065 00c0 00000000 		.4byte	.LFB24
 3066 00c4 1C000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 79


 3067 00c8 00000000 		.4byte	.LFB25
 3068 00cc 18000000 		.4byte	.LFE25-.LFB25
 3069 00d0 00000000 		.4byte	.LFB26
 3070 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3071 00d8 00000000 		.4byte	.LFB27
 3072 00dc 18000000 		.4byte	.LFE27-.LFB27
 3073 00e0 00000000 		.4byte	.LFB28
 3074 00e4 18000000 		.4byte	.LFE28-.LFB28
 3075 00e8 00000000 		.4byte	.LFB29
 3076 00ec 18000000 		.4byte	.LFE29-.LFB29
 3077 00f0 00000000 		.4byte	.LFB30
 3078 00f4 44000000 		.4byte	.LFE30-.LFB30
 3079 00f8 00000000 		.4byte	.LFB31
 3080 00fc 44000000 		.4byte	.LFE31-.LFB31
 3081 0100 00000000 		.4byte	.LFB32
 3082 0104 48000000 		.4byte	.LFE32-.LFB32
 3083 0108 00000000 		.4byte	.LFB33
 3084 010c 44000000 		.4byte	.LFE33-.LFB33
 3085 0110 00000000 		.4byte	.LFB34
 3086 0114 44000000 		.4byte	.LFE34-.LFB34
 3087 0118 00000000 		.4byte	.LFB35
 3088 011c 3C000000 		.4byte	.LFE35-.LFB35
 3089 0120 00000000 		.4byte	.LFB36
 3090 0124 20000000 		.4byte	.LFE36-.LFB36
 3091 0128 00000000 		.4byte	.LFB37
 3092 012c 18000000 		.4byte	.LFE37-.LFB37
 3093 0130 00000000 		.4byte	.LFB38
 3094 0134 14000000 		.4byte	.LFE38-.LFB38
 3095 0138 00000000 		.4byte	.LFB39
 3096 013c 14000000 		.4byte	.LFE39-.LFB39
 3097 0140 00000000 		.4byte	.LFB40
 3098 0144 18000000 		.4byte	.LFE40-.LFB40
 3099 0148 00000000 		.4byte	.LFB41
 3100 014c 18000000 		.4byte	.LFE41-.LFB41
 3101 0150 00000000 		.4byte	0
 3102 0154 00000000 		.4byte	0
 3103              		.section	.debug_ranges,"",%progbits
 3104              	.Ldebug_ranges0:
 3105 0000 00000000 		.4byte	.LFB2
 3106 0004 50000000 		.4byte	.LFE2
 3107 0008 00000000 		.4byte	.LFB3
 3108 000c 38000000 		.4byte	.LFE3
 3109 0010 00000000 		.4byte	.LFB4
 3110 0014 24000000 		.4byte	.LFE4
 3111 0018 00000000 		.4byte	.LFB5
 3112 001c 30000000 		.4byte	.LFE5
 3113 0020 00000000 		.4byte	.LFB6
 3114 0024 48000000 		.4byte	.LFE6
 3115 0028 00000000 		.4byte	.LFB7
 3116 002c 48000000 		.4byte	.LFE7
 3117 0030 00000000 		.4byte	.LFB8
 3118 0034 48000000 		.4byte	.LFE8
 3119 0038 00000000 		.4byte	.LFB9
 3120 003c 4C000000 		.4byte	.LFE9
 3121 0040 00000000 		.4byte	.LFB10
 3122 0044 1C000000 		.4byte	.LFE10
 3123 0048 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 80


 3124 004c 48000000 		.4byte	.LFE11
 3125 0050 00000000 		.4byte	.LFB12
 3126 0054 48000000 		.4byte	.LFE12
 3127 0058 00000000 		.4byte	.LFB13
 3128 005c 4C000000 		.4byte	.LFE13
 3129 0060 00000000 		.4byte	.LFB14
 3130 0064 48000000 		.4byte	.LFE14
 3131 0068 00000000 		.4byte	.LFB15
 3132 006c 1C000000 		.4byte	.LFE15
 3133 0070 00000000 		.4byte	.LFB16
 3134 0074 18000000 		.4byte	.LFE16
 3135 0078 00000000 		.4byte	.LFB17
 3136 007c 48000000 		.4byte	.LFE17
 3137 0080 00000000 		.4byte	.LFB18
 3138 0084 1C000000 		.4byte	.LFE18
 3139 0088 00000000 		.4byte	.LFB19
 3140 008c 18000000 		.4byte	.LFE19
 3141 0090 00000000 		.4byte	.LFB20
 3142 0094 48000000 		.4byte	.LFE20
 3143 0098 00000000 		.4byte	.LFB21
 3144 009c 1C000000 		.4byte	.LFE21
 3145 00a0 00000000 		.4byte	.LFB22
 3146 00a4 18000000 		.4byte	.LFE22
 3147 00a8 00000000 		.4byte	.LFB23
 3148 00ac 48000000 		.4byte	.LFE23
 3149 00b0 00000000 		.4byte	.LFB24
 3150 00b4 1C000000 		.4byte	.LFE24
 3151 00b8 00000000 		.4byte	.LFB25
 3152 00bc 18000000 		.4byte	.LFE25
 3153 00c0 00000000 		.4byte	.LFB26
 3154 00c4 1C000000 		.4byte	.LFE26
 3155 00c8 00000000 		.4byte	.LFB27
 3156 00cc 18000000 		.4byte	.LFE27
 3157 00d0 00000000 		.4byte	.LFB28
 3158 00d4 18000000 		.4byte	.LFE28
 3159 00d8 00000000 		.4byte	.LFB29
 3160 00dc 18000000 		.4byte	.LFE29
 3161 00e0 00000000 		.4byte	.LFB30
 3162 00e4 44000000 		.4byte	.LFE30
 3163 00e8 00000000 		.4byte	.LFB31
 3164 00ec 44000000 		.4byte	.LFE31
 3165 00f0 00000000 		.4byte	.LFB32
 3166 00f4 48000000 		.4byte	.LFE32
 3167 00f8 00000000 		.4byte	.LFB33
 3168 00fc 44000000 		.4byte	.LFE33
 3169 0100 00000000 		.4byte	.LFB34
 3170 0104 44000000 		.4byte	.LFE34
 3171 0108 00000000 		.4byte	.LFB35
 3172 010c 3C000000 		.4byte	.LFE35
 3173 0110 00000000 		.4byte	.LFB36
 3174 0114 20000000 		.4byte	.LFE36
 3175 0118 00000000 		.4byte	.LFB37
 3176 011c 18000000 		.4byte	.LFE37
 3177 0120 00000000 		.4byte	.LFB38
 3178 0124 14000000 		.4byte	.LFE38
 3179 0128 00000000 		.4byte	.LFB39
 3180 012c 14000000 		.4byte	.LFE39
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 81


 3181 0130 00000000 		.4byte	.LFB40
 3182 0134 18000000 		.4byte	.LFE40
 3183 0138 00000000 		.4byte	.LFB41
 3184 013c 18000000 		.4byte	.LFE41
 3185 0140 00000000 		.4byte	0
 3186 0144 00000000 		.4byte	0
 3187              		.section	.debug_line,"",%progbits
 3188              	.Ldebug_line0:
 3189 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3189      02004200 
 3189      00000201 
 3189      FB0E0D00 
 3189      01010101 
 3190              	.LASF40:
 3191 0000 636F756E 		.ascii	"count\000"
 3191      7400
 3192              	.LASF18:
 3193 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3193      456E6162 
 3193      6C6500
 3194              	.LASF31:
 3195 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3195      53657450 
 3195      574D5379 
 3195      6E634B69 
 3195      6C6C00
 3196              	.LASF44:
 3197 0024 70657269 		.ascii	"period\000"
 3197      6F6400
 3198              	.LASF7:
 3199 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3199      206C6F6E 
 3199      6720756E 
 3199      7369676E 
 3199      65642069 
 3200              	.LASF61:
 3201 0042 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3201      53657443 
 3201      61707475 
 3201      72654D6F 
 3201      646500
 3202              	.LASF24:
 3203 0055 71644D6F 		.ascii	"qdMode\000"
 3203      646500
 3204              	.LASF39:
 3205 005c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3205      57726974 
 3205      65436F75 
 3205      6E746572 
 3205      00
 3206              	.LASF45:
 3207 006d 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3207      52656164 
 3207      436F756E 
 3207      74657200 
 3208              	.LASF6:
 3209 007d 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 82


 3209      206C6F6E 
 3209      6720696E 
 3209      7400
 3210              	.LASF0:
 3211 008b 7369676E 		.ascii	"signed char\000"
 3211      65642063 
 3211      68617200 
 3212              	.LASF56:
 3213 0097 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3213      57726974 
 3213      65436F6D 
 3213      70617265 
 3213      42756600 
 3214              	.LASF70:
 3215 00ab 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3215      53657449 
 3215      6E746572 
 3215      72757074 
 3215      4D6F6465 
 3216              	.LASF74:
 3217 00c0 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3217      436C6561 
 3217      72496E74 
 3217      65727275 
 3217      707400
 3218              	.LASF77:
 3219 00d3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3219      6E657261 
 3219      7465645F 
 3219      536F7572 
 3219      63655C50 
 3220              	.LASF4:
 3221 00f2 6C6F6E67 		.ascii	"long int\000"
 3221      20696E74 
 3221      00
 3222              	.LASF9:
 3223 00fb 75696E74 		.ascii	"uint8\000"
 3223      3800
 3224              	.LASF12:
 3225 0101 646F7562 		.ascii	"double\000"
 3225      6C6500
 3226              	.LASF58:
 3227 0108 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3227      52656164 
 3227      436F6D70 
 3227      61726542 
 3227      756600
 3228              	.LASF47:
 3229 011b 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3229      53657443 
 3229      6F6D7061 
 3229      72655377 
 3229      617000
 3230              	.LASF19:
 3231 012e 50574D5F 		.ascii	"PWM_Stop\000"
 3231      53746F70 
 3231      00
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 83


 3232              	.LASF37:
 3233 0137 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3233      53657450 
 3233      574D496E 
 3233      76657274 
 3233      00
 3234              	.LASF10:
 3235 0148 75696E74 		.ascii	"uint32\000"
 3235      333200
 3236              	.LASF64:
 3237 014f 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3237      53657453 
 3237      74617274 
 3237      4D6F6465 
 3237      00
 3238              	.LASF62:
 3239 0160 74726967 		.ascii	"triggerMode\000"
 3239      6765724D 
 3239      6F646500 
 3240              	.LASF38:
 3241 016c 6D61736B 		.ascii	"mask\000"
 3241      00
 3242              	.LASF69:
 3243 0171 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3243      52656164 
 3243      53746174 
 3243      757300
 3244              	.LASF36:
 3245 0180 64656164 		.ascii	"deadTime\000"
 3245      54696D65 
 3245      00
 3246              	.LASF65:
 3247 0189 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3247      53657453 
 3247      746F704D 
 3247      6F646500 
 3248              	.LASF8:
 3249 0199 756E7369 		.ascii	"unsigned int\000"
 3249      676E6564 
 3249      20696E74 
 3249      00
 3250              	.LASF35:
 3251 01a6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3251      53657450 
 3251      574D4465 
 3251      61645469 
 3251      6D6500
 3252              	.LASF68:
 3253 01b9 636F6D6D 		.ascii	"command\000"
 3253      616E6400 
 3254              	.LASF5:
 3255 01c1 6C6F6E67 		.ascii	"long unsigned int\000"
 3255      20756E73 
 3255      69676E65 
 3255      6420696E 
 3255      7400
 3256              	.LASF30:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 84


 3257 01d3 6D6F6465 		.ascii	"modeMask\000"
 3257      4D61736B 
 3257      00
 3258              	.LASF3:
 3259 01dc 73686F72 		.ascii	"short unsigned int\000"
 3259      7420756E 
 3259      7369676E 
 3259      65642069 
 3259      6E7400
 3260              	.LASF78:
 3261 01ef 433A5C55 		.ascii	"C:\\Users\\Michael\\Desktop\\Removable Disk\\BLE La"
 3261      73657273 
 3261      5C4D6963 
 3261      6861656C 
 3261      5C446573 
 3262 021d 6220335C 		.ascii	"b 3\\BLE Lab 3 Number.cydsn\000"
 3262      424C4520 
 3262      4C616220 
 3262      33204E75 
 3262      6D626572 
 3263              	.LASF25:
 3264 0238 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3264      53657450 
 3264      72657363 
 3264      616C6572 
 3264      00
 3265              	.LASF17:
 3266 0249 50574D5F 		.ascii	"PWM_Start\000"
 3266      53746172 
 3266      7400
 3267              	.LASF67:
 3268 0253 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3268      54726967 
 3268      67657243 
 3268      6F6D6D61 
 3268      6E6400
 3269              	.LASF53:
 3270 0266 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3270      57726974 
 3270      65436F6D 
 3270      70617265 
 3270      00
 3271              	.LASF43:
 3272 0277 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3272      57726974 
 3272      65506572 
 3272      696F6400 
 3273              	.LASF14:
 3274 0287 72656733 		.ascii	"reg32\000"
 3274      3200
 3275              	.LASF79:
 3276 028d 50574D5F 		.ascii	"PWM_initVar\000"
 3276      696E6974 
 3276      56617200 
 3277              	.LASF46:
 3278 0299 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3278      52656164 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 85


 3278      50657269 
 3278      6F6400
 3279              	.LASF15:
 3280 02a8 73697A65 		.ascii	"sizetype\000"
 3280      74797065 
 3280      00
 3281              	.LASF32:
 3282 02b1 73796E63 		.ascii	"syncKillEnable\000"
 3282      4B696C6C 
 3282      456E6162 
 3282      6C6500
 3283              	.LASF54:
 3284 02c0 636F6D70 		.ascii	"compare\000"
 3284      61726500 
 3285              	.LASF27:
 3286 02c8 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3286      5365744F 
 3286      6E655368 
 3286      6F7400
 3287              	.LASF51:
 3288 02d7 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3288      52656164 
 3288      50657269 
 3288      6F644275 
 3288      6600
 3289              	.LASF11:
 3290 02e9 666C6F61 		.ascii	"float\000"
 3290      7400
 3291              	.LASF26:
 3292 02ef 70726573 		.ascii	"prescaler\000"
 3292      63616C65 
 3292      7200
 3293              	.LASF76:
 3294 02f9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3294      4320342E 
 3294      382E3420 
 3294      32303134 
 3294      30353236 
 3295 032c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3295      20726576 
 3295      6973696F 
 3295      6E203231 
 3295      31333538 
 3296 035f 30202D66 		.ascii	"0 -ffunction-sections\000"
 3296      66756E63 
 3296      74696F6E 
 3296      2D736563 
 3296      74696F6E 
 3297              	.LASF59:
 3298 0375 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3298      52656164 
 3298      43617074 
 3298      75726500 
 3299              	.LASF52:
 3300 0385 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3300      53657450 
 3300      6572696F 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 86


 3300      64537761 
 3300      7000
 3301              	.LASF1:
 3302 0397 756E7369 		.ascii	"unsigned char\000"
 3302      676E6564 
 3302      20636861 
 3302      7200
 3303              	.LASF16:
 3304 03a5 50574D5F 		.ascii	"PWM_Init\000"
 3304      496E6974 
 3304      00
 3305              	.LASF34:
 3306 03ae 73746F70 		.ascii	"stopOnKillEnable\000"
 3306      4F6E4B69 
 3306      6C6C456E 
 3306      61626C65 
 3306      00
 3307              	.LASF29:
 3308 03bf 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3308      53657450 
 3308      574D4D6F 
 3308      646500
 3309              	.LASF2:
 3310 03ce 73686F72 		.ascii	"short int\000"
 3310      7420696E 
 3310      7400
 3311              	.LASF72:
 3312 03d8 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3312      47657449 
 3312      6E746572 
 3312      72757074 
 3312      536F7572 
 3313              	.LASF71:
 3314 03f5 696E7465 		.ascii	"interruptMask\000"
 3314      72727570 
 3314      744D6173 
 3314      6B00
 3315              	.LASF49:
 3316 0403 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3316      57726974 
 3316      65506572 
 3316      696F6442 
 3316      756600
 3317              	.LASF22:
 3318 0416 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3318      53657451 
 3318      444D6F64 
 3318      6500
 3319              	.LASF13:
 3320 0424 63686172 		.ascii	"char\000"
 3320      00
 3321              	.LASF23:
 3322 0429 6D6F6465 		.ascii	"mode\000"
 3322      00
 3323              	.LASF75:
 3324 042e 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3324      53657449 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 87


 3324      6E746572 
 3324      72757074 
 3324      00
 3325              	.LASF63:
 3326 043f 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3326      53657452 
 3326      656C6F61 
 3326      644D6F64 
 3326      6500
 3327              	.LASF42:
 3328 0451 636F756E 		.ascii	"counterMode\000"
 3328      7465724D 
 3328      6F646500 
 3329              	.LASF57:
 3330 045d 636F6D70 		.ascii	"compareBuf\000"
 3330      61726542 
 3330      756600
 3331              	.LASF50:
 3332 0468 70657269 		.ascii	"periodBuf\000"
 3332      6F644275 
 3332      6600
 3333              	.LASF60:
 3334 0472 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3334      52656164 
 3334      43617074 
 3334      75726542 
 3334      756600
 3335              	.LASF20:
 3336 0485 656E6162 		.ascii	"enableInterrupts\000"
 3336      6C65496E 
 3336      74657272 
 3336      75707473 
 3336      00
 3337              	.LASF66:
 3338 0496 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3338      53657443 
 3338      6F756E74 
 3338      4D6F6465 
 3338      00
 3339              	.LASF28:
 3340 04a7 6F6E6553 		.ascii	"oneShotEnable\000"
 3340      686F7445 
 3340      6E61626C 
 3340      6500
 3341              	.LASF21:
 3342 04b5 50574D5F 		.ascii	"PWM_SetMode\000"
 3342      5365744D 
 3342      6F646500 
 3343              	.LASF33:
 3344 04c1 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3344      53657450 
 3344      574D5374 
 3344      6F704F6E 
 3344      4B696C6C 
 3345              	.LASF48:
 3346 04d6 73776170 		.ascii	"swapEnable\000"
 3346      456E6162 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\cc3aAqdb.s 			page 88


 3346      6C6500
 3347              	.LASF73:
 3348 04e1 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3348      47657449 
 3348      6E746572 
 3348      72757074 
 3348      536F7572 
 3349              	.LASF41:
 3350 04f8 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3350      53657443 
 3350      6F756E74 
 3350      65724D6F 
 3350      646500
 3351              	.LASF55:
 3352 050b 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3352      52656164 
 3352      436F6D70 
 3352      61726500 
 3353              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
